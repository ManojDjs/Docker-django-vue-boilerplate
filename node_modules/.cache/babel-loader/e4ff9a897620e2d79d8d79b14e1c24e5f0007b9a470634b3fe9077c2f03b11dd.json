{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Data visualization\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \" immune system questionnairre\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Chart = _resolveComponent(\"Chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createVNode(_component_Chart, {\n    type: \"radar\",\n    data: $data.isq_data\n  }, null, 8 /* PROPS */, [\"data\"])]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAA2B,YAAvB,oBAAkB;gCACtBA,oBAAsC,YAAlC,+BAA6B;;;;uBAFrCC,oBAKM,cAJFC,UAA2B,EAC3BC,UAAsC,EACtCC,aAAuCC;IAAhCC,IAAI,EAAC,OAAO;IAAEC,IAAI,EAAEC","names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_Chart","type","data","$data"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\components\\DV.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h1>Data visualization</h1>\r\n    <h2> immune system questionnairre</h2>\r\n    <Chart type=\"radar\" :data=\"isq_data\" />\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport Json from \"@/assets/endpoints.json\"\r\nimport axios from 'axios'\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n    data(){\r\n        return{\r\n            server:Json[0]['SERVER']['SERVER'],\r\n            isq_inital:Json[0]['ISQ']['Total'],\r\n            isq_final:Json[0]['FISQ']['Total'],\r\n            isq_status:false,\r\n            mwb_status:false,\r\n            wbm_status:false,\r\n            isq1:[],\r\n            isq2:[],\r\n            isq_data:{\r\n                labels:[],\r\n                datasets:[\r\n                    {\r\n\t\t\t\t\t\tlabel: 'My inital dataset',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(179,181,198,0.2)',\r\n\t\t\t\t\t\tborderColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tpointBackgroundColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tpointBorderColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'My final dataset',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\r\n\t\t\t\t\t\tborderColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tpointBackgroundColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tpointBorderColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t}\r\n                ]\r\n            },\r\n            mwb1:[],\r\n            mwb2:[],\r\n            wbm1:[],\r\n            wbm2:[],\r\n        }\r\n    },\r\n      computed:{\r\n    ...mapState([\r\n      'token',\r\n      'user',\r\n      'heading'\r\n    ])\r\n      },\r\n    methods:{\r\n        get_isq(){\r\n            const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n            axios.get(this.server+this.isq_inital,{'headers':headers}\r\n            ).then(resp=>{\r\n                console.log(resp.data)\r\n                if(resp.data[0]['ISQ']['total_answers']==resp.data[0]['ISQ']['total_questions']){\r\n                    this.isq1=resp.data[0]['ISQ']\r\n                    let result = this.isq1.map(a => a.answer);\r\n                    console.log(result)\r\n                    this.isq_data['datasets'][0]['data']=result\r\n\r\n                }\r\n            })\r\n              axios.get(this.server+this.isq_final,{'headers':headers}\r\n            ).then(resp=>{\r\n                console.log(resp.data)\r\n                if(resp.data[0]['FISQ']['total_answers']==resp.data[0]['FISQ']['total_questions']){\r\n                    this.isq2=resp.data[0]['FISQ']\r\n                    let result = this.isq2.map(a => a.answer);\r\n                    console.log(result)\r\n                    this.isq_data['datasets'][1]['data']=result\r\n                    let lables=this.isq2.map(a=>a.question_name.question)\r\n                     this.isq_data['labels']=lables\r\n\r\n                }\r\n            })\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.get_isq()\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}