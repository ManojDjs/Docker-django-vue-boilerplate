{"remainingRequest":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/components/I_ISQ.vue?vue&type=template&id=1964a9de&scoped=true&bindings={\"isq_link\":\"data\",\"total\":\"data\",\"questionlink\":\"data\",\"submission_link\":\"data\",\"edit\":\"data\",\"status\":\"data\",\"value\":\"data\",\"Answers_KV\":\"data\",\"Submisions\":\"data\",\"yesno\":\"data\",\"yesnoanswer\":\"data\",\"selected\":\"data\",\"oprions\":\"data\",\"take_questions\":\"data\",\"localedit\":\"data\",\"check\":\"options\",\"register_user_qa\":\"options\",\"save\":\"options\",\"submit\":\"options\",\"afteredit\":\"options\",\"create_object\":\"options\",\"editanswers\":\"options\"}","dependencies":[{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/components/I_ISQ.vue","mtime":1607552811606},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1604800558176},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1604800559128},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js","mtime":1604800559128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/components/I_ISQ.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <Toast position=\"top-right\" />\n    <Panel header=\"Message\" v-if=\"get_q_status=='NR'\">\n\t<h1> No Reocrds found for you</h1>\n     <div class=\"p-m-2\"> <h3>click below button to start questionnaire</h3></div>\n     <Button type=\"button\" v-on:click='register_user_qa' label=\"Start\" class=\"p-button-success\"/>\n\n   </Panel>\n   <div v-if=\"get_q_status=='RS'\">\n        <div class=\"p-fluid p-formgrid p-grid\" v-for='(item,index) in Answers_KV' :key='index' >\n            \n            <div class=\"p-field p-col\" >\n                    <h3>{{ item.question_name }}</h3>\n                    <div class=\"demo-container p-pl-6 p-pr-6\">\n\n                    <Dropdown v-model=\"item.answer\" :options=\"oprions\" optionLabel=\"name\" placeholder=\"please indicate \" v-if='item.question_type==\"Options\"'/>\n                    <h3 v-if=\"item.question_type=='Slider'\">Please Drage between [0,10] {{ item.answer }}</h3>\n                    <Slider v-model=\"item.answer\" v-if=\"item.question_type=='Slider'\" :step=\"1\" :min=\"1\" :max=\"10\"   class=\"p-p-2\"/>\n                    \n                    <SelectButton class='p-button-primary' v-model=\"item.answer\" :options=\"yesno\" v-if=\"item.question_type=='YESNO'\" />\n                    </div>\n            </div>\n         </div>\n           <Button type=\"button\" v-on:click='submit' label=\"Submit\" class=\"p-button-success p-button-lg\"/>\n   </div>\n    <div v-if=\"get_q_status=='EDIT'\">\n        <!-- {{ get_qa }} -->\n        <div class=\"p-fluid p-formgrid p-grid\" v-for='(item,index) in Answers_KV' :key='index' >\n            \n            <div class=\"p-field p-col\" >\n                    <h3>{{ item.question_name }}</h3>\n                    <div class=\"demo-container p-pl-6 p-pr-6\">\n\n                    <Dropdown v-model=\"item.answer\" :options=\"oprions\" optionLabel=\"name\" placeholder=\"please indicate \" v-if='item.question_type==\"Options\"'/>\n                    <h3 v-if=\"item.question_type=='Slider'\">Please Drage between [0,10] {{ item.answer }}</h3>\n                    <Slider v-model=\"item.answer\" v-if=\"item.question_type=='Slider'\" :step=\"1\" :min=\"1\" :max=\"10\"   class=\"p-p-2\"/>\n                    \n                    <SelectButton class='p-button-primary' v-model=\"item.answer\" :options=\"yesno\" v-if=\"item.question_type=='YESNO'\" />\n                    </div>\n            </div>\n         </div>\n         <Button type=\"button\" v-on:click='save' label=\"Save\" class=\"p-button-success p-button-lg\"/>\n          \n   </div>\n {{ get_q_status }}\n {{ get_qa[0]['total_answers'] }}\n</div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\n import Json from \"@/assets/endpoints.json\"\n// import { computed } from 'vue'\nexport default {\n    data(){\n        return{\n            isq_link:Json[0]['ISQ'],\n            total:Json[0]['ISQ']['Total'],\n            questionlink:Json[0]['ISQ']['Questions'],\n            submission_link:Json[0]['ISQ']['Answers'],\n            edit:Json[0]['ISQ']['Edit'],\n            status:this.$store.getters.get_q_status,\n            value: [0],\n            Answers_KV:[],\n            Submisions:[],\n            yesno: ['YES', 'NO'],\n            yesnoanswer:null,\n            selected:null,\n            oprions: [\n\t\t\t{name: 'Never', value: 1},\n\t\t\t{name: 'sometimes', value: 2},\n\t\t\t{name: 'Regularly', value: 3},\n\t\t\t{name: 'Often', value: 4},\n            {name: 'Almost Always', value: 5}\n            \n        ],\n        take_questions:false,\n        localedit:false\n        }\n        },\n        computed:{\n            ...mapGetters([\n                'get_questions',\n                'get_q_status',\n                'get_qa',\n                'getuser'\n            ]),\n           \n        },\n        methods:{\n         check(){\n             let link=this.total\n             this.$store.dispatch('check_q_status',link)\n         },\n         register_user_qa(){\n             console.log(\"you clicked\")\n             if(this.get_q_status=='NR'){\n                    this.$store.dispatch('registeruser',this.total)\n                    this.$router.go()\n                }\n         },\n         save(){\n                 var i;\n              var checking=0;\n              console.log(checking)\n                // console.log(this.get_questions.data) checking questions\n                    for(i=0;i<this.Answers_KV.length;i++){\n                    \n                        if(this.Answers_KV[i]['question_type']=='Options'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\n                            this.Submisions.push(\n                                {\n                                    'answer':this.Answers_KV[i]['answer']['value'],\n                                    'editid':this.Answers_KV[i]['editid'],\n                                        'qid':this.Answers_KV[i]['qid'],\n                                    'question_name':this.Answers_KV[i]['question_name'],\n                                    'question_type':this.Answers_KV[i]['question_type']\n                                }\n                            )\n                            console.log(this.Answers_KV[i])\n                                }\n                                if(!this.Answers_KV[i]['answer'])\n                                {\n                                        // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\n                                    checking=checking+1\n                                }\n                            }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                            if(this.Answers_KV[i]['question_type']=='Slider'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\n                                                                this.Submisions.push(\n                                                                {\n                                                                    'answer':this.Answers_KV[i]['answer'],\n                                                                    'editid':this.Answers_KV[i]['editid'],\n                                                                    'qid':this.Answers_KV[i]['qid'],\n                                                                    'question_name':this.Answers_KV[i]['question_name'],\n                                                                    'question_type':this.Answers_KV[i]['question_type']\n                                                                })\n                                                                console.log(this.Answers_KV[i])\n                                }\n                                if(!this.Answers_KV[i]['Slider'])\n                                {\n                                        // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\n                                    checking=checking+1\n                                }\n                                    }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                        if(this.Answers_KV[i]['question_type']=='YESNO'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                                    if(this.Answers_KV[i]['answer']=='YES')\n                                    {\n                                                        this.Submisions.push(\n                                                        {\n                                                    'answer':1,\n                                                    'editid':this.Answers_KV[i]['editid'],\n                                                    'qid':this.Answers_KV[i]['qid'],\n                                                    'question_name':this.Answers_KV[i]['question_name'],\n                                                    'question_type':this.Answers_KV[i]['question_type']\n                                                    })\n\n                                    }\n                                    else{\n                                                                this.Submisions.push(\n                                                        {\n                                                            'answer':0,\n                                                            'editid':this.Answers_KV[i]['editid'],\n                                                            'qid':this.Answers_KV[i]['qid'],\n                                                            'question_name':this.Answers_KV[i]['question_name'],\n                                                            'question_type':this.Answers_KV[i]['question_type']\n                                                        })\n                                    }\n                                }\n                                if(!this.Answers_KV[i]['Slider'])\n                                {\n                                        \n                                    checking=checking+1\n                                }\n                            }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                        \n                        \n                    }\n            // console.log(this.Submisions)\n               \n                    if(this.get_q_status=='EDIT'){\n                        console.log(this.Submisions)\n                        console.log('no empty fields')\n                                console.log('I am calling store for save')\n                                console.log(this.Submisions)\n                                let link=this.edit\n                                let submisiondata=this.Submisions\n                        \n                                this.$store.dispatch('save',{link,submisiondata})\n                                .then(() =>  this.$toast.add({severity:'success', summary: 'Answers updated', detail:'updated your answers , absorb below', life: 3000}))\n                                .catch(err => console.log(err))\n                        this.Submisions=[]\n\n                    }\n\n             \n         },\n         submit(){\n              var i;\n              var checking=0;\n              console.log(checking)\n                // console.log(this.get_questions.data) checking questions\n                    for(i=0;i<this.Answers_KV.length;i++){\n                    \n                        if(this.Answers_KV[i]['question_type']=='Options'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\n                            this.Submisions.push(\n                                {\n                                    'answer':this.Answers_KV[i]['answer']['value'],\n                                    'editid':this.Answers_KV[i]['editid'],\n                                        'qid':this.Answers_KV[i]['qid'],\n                                    'question_name':this.Answers_KV[i]['question_name'],\n                                    'question_type':this.Answers_KV[i]['question_type']\n                                }\n                            )\n                            console.log(this.Answers_KV[i])\n                                }\n                                if(!this.Answers_KV[i]['answer'])\n                                {\n                                        // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\n                                    checking=checking+1\n                                }\n                            }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                            if(this.Answers_KV[i]['question_type']=='Slider'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\n                                                                this.Submisions.push(\n                                                                {\n                                                                    'answer':this.Answers_KV[i]['answer'],\n                                                                    'editid':this.Answers_KV[i]['editid'],\n                                                                    'qid':this.Answers_KV[i]['qid'],\n                                                                    'question_name':this.Answers_KV[i]['question_name'],\n                                                                    'question_type':this.Answers_KV[i]['question_type']\n                                                                })\n                                                                console.log(this.Answers_KV[i])\n                                }\n                                if(!this.Answers_KV[i]['Slider'])\n                                {\n                                        // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\n                                    checking=checking+1\n                                }\n                                    }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                        if(this.Answers_KV[i]['question_type']=='YESNO'){\n                            try{\n                                if(this.Answers_KV[i]['answer']){\n                                    if(this.Answers_KV[i]['answer']=='YES')\n                                    {\n                                                        this.Submisions.push(\n                                                        {\n                                                    'answer':1,\n                                                    'editid':this.Answers_KV[i]['editid'],\n                                                    'qid':this.Answers_KV[i]['qid'],\n                                                    'question_name':this.Answers_KV[i]['question_name'],\n                                                    'question_type':this.Answers_KV[i]['question_type']\n                                                    })\n\n                                    }\n                                    else{\n                                                                this.Submisions.push(\n                                                        {\n                                                            'answer':0,\n                                                            'editid':this.Answers_KV[i]['editid'],\n                                                            'qid':this.Answers_KV[i]['qid'],\n                                                            'question_name':this.Answers_KV[i]['question_name'],\n                                                            'question_type':this.Answers_KV[i]['question_type']\n                                                        })\n                                    }\n                                }\n                                if(!this.Answers_KV[i]['Slider'])\n                                {\n                                        \n                                    checking=checking+1\n                                }\n                            }\n                            catch(err){\n                                console.log(err)\n                            }\n                            \n                        }\n                        \n                        \n                    }\n            // console.log(this.Submisions)\n                    if(this.get_q_status=='RS'){\n                            if(this.Submisions.length!=this.Answers_KV.length){\n                                var q=this.Answers_KV.length\n                                var b=this.Submisions.length\n                                var len=q-b\n                                    this.$toast.add({severity:'error', summary: 'Empty fields', detail:'there are  '+len+'empty fields', life: 5000});\n                                    this.Submisions=[]\n                                }\n                            else{\n                                console.log('no empty fields')\n                                console.log('I am calling store ')\n                                console.log(this.Submisions)\n                                let link=this.submission_link\n                                let submisiondata=this.Submisions\n                                this.Answers_KV=[]\n                                console.log(\"iam checking length\")\n                                 console.log(this.Submisions.length)\n                                \n                                this.$store.dispatch('submitanswers',{link,submisiondata})\n                                .then(() =>  this.$toast.add({severity:'success', summary: 'Answers submitted', detail:'submitted your answers , absorb below', life: 3000},\n                                this.check(),\n                                ))\n                                \n                                .catch(err => console.log(err))\n                                // this.check()\n                                // this.$router.go()\n                            }\n                    }\n                  \n         },\n        \n         afteredit(){\n             var i;\n                // console.log(this.get_questions.data) checking questions\n                 for(i=0;i<this.get_qa[0]['ISQ'].length;i++){\n                     if(this.get_qa[0]['ISQ'][i]['question_name']['question_type']=='Options'){\n                         if(this.get_qa[0]['ISQ'][i]['answer']=='1'){\n                                 this.get_qa[0]['ISQ'][i]['answer']={name: 'Never', value: 1}\n\n                         }\n                         if(this.get_qa[0]['ISQ'][i]['answer']=='2'){\n                                 this.get_qa[0]['ISQ'][i]['answer']={name: 'sometimes', value: 2}\n\n                         }\n                         if(this.get_qa[0]['ISQ'][i]['answer']=='3'){\n                                 this.get_qa[0]['ISQ'][i]['answer']={name: 'Regularly', value: 3}\n\n                         }\n                         if(this.get_qa[0]['ISQ'][i]['answer']=='4'){\n                                 this.get_qa[0]['ISQ'][i]['answer']={name: 'Often', value: 4}\n\n                         }\n                         if(this.get_qa[0]['ISQ'][i]['answer']=='5'){\n                                 this.get_qa[0]['ISQ'][i]['answer']={name: 'Almost Always', value: 5}\n\n                         }\n                     }\n                     if(this.get_qa[0]['ISQ'][i]['question_name']['question_type']=='YESNO'){\n                          if(this.get_qa[0]['ISQ'][i]['answer']=='1'){\n                                 this.get_qa[0]['ISQ'][i]['answer']='YES'\n\n                         }\n                          if(this.get_qa[0]['ISQ'][i]['answer']=='0'){\n                                 this.get_qa[0]['ISQ'][i]['answer']='NO'\n\n                         }\n                     }\n\n                                    this.Answers_KV.push({\n                                        \"editid\":this.get_qa[0]['ISQ'][i]['id'],\n                                        \"qid\":this.get_qa[0]['ISQ'][i]['question_name']['id'],\n                                        \"answer\": this.get_qa[0]['ISQ'][i]['answer'],\n                                        // \"main_question_set\":this.getuser,\n                                        \"question_name\": this.get_qa[0]['ISQ'][i]['question_name']['question'],\n                                        \"question_type\":this.get_qa[0]['ISQ'][i]['question_name']['question_type'],\n                                        // \"answer_by\": this.getuser\n                                    })\n                        }\n                                    console.log('i am here')\n                                    console.log(this.Answers_KV)\n\n\n                    },\n\n         create_object:function(){\n\n             var i;\n                // console.log(this.get_questions.data) checking questions\n                    for(i=0;i<this.get_questions.length;i++){\n                    \n                        \n                        this.Answers_KV.push({\n                            \"qid\":this.get_questions[i]['id'],\n                            \"answer\": 0,\n                            // \"main_question_set\":this.getuser,\n                            \"question_name\": this.get_questions[i]['question'],\n                            \"question_type\":this.get_questions[i]['question_type'],\n                            // \"answer_by\": this.getuser\n                        })\n                    }\n                   console.log(this.Answers_KV)\n\n\n         },\n         editanswers(){\n              var i;\n                // console.log(this.get_questions.data) checking questions\n                 for(i=0;i<this.get_qa[0]['ISQ'].length;i++){\n                     if(this.get_qa[0]['ISQ'][i]['question_name']['question_type']=='Options'){\n                                    if(this.get_qa[0]['ISQ'][i]['answer']=='1'){\n                                            this.get_qa[0]['ISQ'][i]['answer']={name: 'Never', value: 1}\n\n                                    }\n                                    if(this.get_qa[0]['ISQ'][i]['answer']=='2'){\n                                            this.get_qa[0]['ISQ'][i]['answer']={name: 'sometimes', value: 2}\n\n                                    }\n                                    if(this.get_qa[0]['ISQ'][i]['answer']=='3'){\n                                            this.get_qa[0]['ISQ'][i]['answer']={name: 'Regularly', value: 3}\n\n                                    }\n                                    if(this.get_qa[0]['ISQ'][i]['answer']=='4'){\n                                            this.get_qa[0]['ISQ'][i]['answer']={name: 'Often', value: 4}\n\n                                    }\n                                    if(this.get_qa[0]['ISQ'][i]['answer']=='5'){\n                                            this.get_qa[0]['ISQ'][i]['answer']={name: 'Almost Always', value: 5}\n\n                                    }\n                                }\n                     if(this.get_qa[0]['ISQ'][i]['question_name']['question_type']=='YESNO'){\n                          if(this.get_qa[0]['ISQ'][i]['answer']=='1'){\n                                 this.get_qa[0]['ISQ'][i]['answer']='YES'\n\n                                 }\n                          if(this.get_qa[0]['ISQ'][i]['answer']=='0'){\n                                 this.get_qa[0]['ISQ'][i]['answer']='NO'\n\n                                }\n                         }\n                    //  var lent=this.Answers_KV.length\n                    //  var lenqa=this.get_qa[0]['ISQ']\n\n                    // if(lent<lenqa){\n                        this.Answers_KV.push({\n                            \"editid\":this.get_qa[0]['ISQ'][i]['id'],\n                            \"qid\":this.get_qa[0]['ISQ'][i]['question_name']['id'],\n                            \"answer\": this.get_qa[0]['ISQ'][i]['answer'],\n                            // \"main_question_set\":this.getuser,\n                            \"question_name\": this.get_qa[0]['ISQ'][i]['question_name']['question'],\n                            \"question_type\":this.get_qa[0]['ISQ'][i]['question_name']['question_type']\n                            // \"answer_by\": this.getuser\n                                     })\n                        }\n                    // console.log('i am here'),\n                    // console.log(this.Answers_KV)\n                    }\n},\n         watch:{\n            get_q_status(){\n                if(this.get_q_status=='NR'){\n                    this.take_questions=true\n                }\n                if(this.get_q_status==\"RS\"){\n                    this.$store.dispatch('questions_taker',this.questionlink)\n                    this.create_object()\n                }\n                if(this.get_q_status=='RF'){\n                    console.log(' iam here')\n                    if(this.get_qa[0]['total_answers']=='0'){\n                        this.$store.dispatch('questions_taker',this.questionlink)\n                        \n                    }\n                }\n                if(this.get_q_status=='EDIT'){\n                this.localedit=true\n                this.editanswers()\n                }\n            },\n            get_qa(){\n\n                if(this.get_qa[0]['total_answers']=='0'){\n                    this.$store.dispatch('questions_taker',this.questionlink)\n                    this.get_q_status=='RS'\n                    \n                }\n                \n            },\n            get_questions(){\n                console.log('i triggered len')\n                if(this.get_questions.length>1){\n                    console.log(\"fuck\")\n                }\n            },\n        created(){\n            this.check()\n           if(this.get_q_status=='EDIT'){\n               this.localedit=true\n           }\n           else{\n               this.localedit=false\n           }\n\n        }\n       \n    \n\n    \n}\n}\n</script>\n<style lang='scss' scoped>\n::v-deep(.p-scrollpanel) {\n    p {\n        padding: .5rem;\n        line-height: 1.5;\n        margin: 0;\n    }\n    & .button{\n         .p-selectbutton {\n             background:green;\n\n    }\n    }\n    &.custombar1 {\n        .p-scrollpanel-wrapper {\n            border-right: 9px solid var(--surface-b);\n        }\n\n        .p-scrollpanel-bar {\n            background-color: var(--primary-color);\n            opacity: 1;\n            transition: background-color .2s;\n\n            &:hover {\n                background-color: #007ad9;\n            }\n        }\n    }\n\n    &.custombar2 {\n        .p-scrollpanel-wrapper {\n            border-right: 9px solid var(--surface-b);\n            border-bottom: 9px solid var(--surface-b);\n        }\n\n        .p-scrollpanel-bar {\n            background-color: var(--surface-d);\n            border-radius: 0;\n            opacity: 1;\n            transition: background-color .2s;\n        }\n    }  \n}\n\n</style>"],"sourceRoot":""}]}