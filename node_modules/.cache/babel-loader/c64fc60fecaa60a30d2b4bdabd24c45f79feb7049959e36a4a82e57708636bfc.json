{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: () => ({\n    token: null,\n    tokenvalid: 'p-button-warning',\n    errors: []\n    // reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/\n  }),\n\n  methods: {\n    validate() {\n      if (this.token != null) {\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        axios.get('http://127.0.0.1:8000/api/accounts/activate/NA/' + this.token, config).then(response => {\n          console.log(response.status), console.log(response.data), this.$router.push('/Login');\n        }).catch(e => {\n          console.log(e.response.status);\n          if (e.response.status == 400) {\n            this.$toast.add({\n              severity: 'error',\n              summary: e.response.data,\n              detail: 'invalid token',\n              life: 3000\n            });\n          }\n        });\n      } else {\n        this.$toast.add({\n          severity: 'error',\n          summary: 'Empty fields',\n          detail: 'Token must be provided ',\n          life: 3000\n        });\n      }\n    },\n    back_to_login() {\n      this.$router.push('/Login');\n    }\n  },\n  watch: {\n    token: function () {\n      if (this.token != null) {\n        this.tokenvalid = 'p-button-success';\n      } else {\n        this.tokenvalid = 'p-button-danger';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACXC,IAAI,EAAE,OAAO;IAEfC,KAAK,EAAC,IAAI;IACVC,UAAU,EAAC,kBAAkB;IAE7BC,MAAM,EAAE;IACR;EAEF,CAAC,CAAC;;EACFC,OAAO,EAAC;IACHC,QAAQ,GAAE;MACX,IAAG,IAAI,CAACJ,KAAK,IAAE,IAAI,EAAC;QAChB,MAAMK,MAAM,GAAC;UACXC,OAAO,EAAC;YACN,cAAc,EAAC;UACjB;QACF;QACAR,KAAK,CAACS,GAAG,CAAC,iDAAiD,GAAC,IAAI,CAACP,KAAK,EACpEK,MAAM,EACPG,IAAI,CAACC,QAAQ,IAAE;UAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,CAAC,EAC5BF,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACV,IAAI,CAAC,EAC1B,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAAA,CAAC,EAC3BC,KAAK,CAACC,CAAC,IAAE;UACRN,OAAO,CAACC,GAAG,CAACK,CAAC,CAACP,QAAQ,CAACG,MAAM;UAC7B,IAAGI,CAAC,CAACP,QAAQ,CAACG,MAAM,IAAE,GAAG,EAAC;YACtB,IAAI,CAACK,MAAM,CAACC,GAAG,CAAC;cAACC,QAAQ,EAAC,OAAO;cAAEC,OAAO,EAAEJ,CAAC,CAACP,QAAQ,CAACV,IAAI;cAAEsB,MAAM,EAAC,eAAe;cAAEC,IAAI,EAAE;YAAI,CAAC,CAAC;UACrG;QAEF,CAAC;MAEL,OACI;QACD,IAAI,CAACL,MAAM,CAACC,GAAG,CAAC;UAACC,QAAQ,EAAC,OAAO;UAAEC,OAAO,EAAE,cAAc;UAAEC,MAAM,EAAC,yBAAyB;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;MAE7G;IAEF,CAAC;IACDC,aAAa,GAAE;MACX,IAAI,CAACV,OAAO,CAACC,IAAI,CAAC,QAAQ;IAE9B;EACF,CAAC;EACDU,KAAK,EAAC;IACDxB,KAAK,EAAC,YAAU;MACf,IAAG,IAAI,CAACA,KAAK,IAAE,IAAI,EAAC;QAClB,IAAI,CAACC,UAAU,GAAC,kBAAiB;MACnC,OACI;QACJ,IAAI,CAACA,UAAU,GAAC,iBAAgB;MAClC;IACA;EACJ;AAEA","names":["axios","data","token","tokenvalid","errors","methods","validate","config","headers","get","then","response","console","log","status","$router","push","catch","e","$toast","add","severity","summary","detail","life","back_to_login","watch"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\views\\RegistrationMessage.vue"],"sourcesContent":["<template>\r\n<div class=\"p-m-2 p-p-20\">\r\n      <Toast position=\"top-right\" />\r\n        <Button type=\"button\" label=\"Account verification\" icon=\"pi pi-users\" class=\"p-button-warning p-d-block p-mx-auto\" badgeClass=\"p-badge-danger\" /> \r\n        \r\n        <div class=\"p-grid\">\r\n         \r\n            <div class=\"box p-mx-auto p-p-auto\">\r\n            <div class=\"p-fluid\">\r\n              <br>\r\n                <h1>Registration successfull</h1>\r\n                <br>\r\n            <Fieldset legend=\"Congratulations\" :toggleable=\"true\">\r\n                <p>Email has been sent to the address you provided while Registration,you can click on the link to verify you account</p>\r\n                     <Button type=\"submit\"  style=\"width:10rem\" v-on:click='back_to_login' label=\"Goto LOGIN\" icon=\"pi pi-backward\" iconPos=\"left\" class=\"p-button-md\" />\r\n                <h4>OR</h4>\r\n                <p>Copy paste token in below token box for activation!</p>\r\n\r\n            </Fieldset>\r\n             <div class=\"p-field\">\r\n                   <label for=\"Email address\">Enter Token to validate</label>\r\n                  <div class=\"p-inputgroup\">\r\n                 \r\n                      <!-- <i class=\"pi pi-envelope\"></i> -->\r\n                      <Button icon=\"pi pi-money-bill\" v-bind:class='tokenvalid'/>\r\n           \r\n                  <InputText id=\"email\" v-model=\"token\"  type=\"text\" />\r\n                \r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Button type=\"submit\"  style=\"width:10rem\" v-on:click='validate' label=\"validate token\" icon=\"pi pi-lock-open\" iconPos=\"right\" class=\"p-button-md\" />\r\n                </div>\r\n        </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    data: () => ({\r\n  \r\n  token:null,\r\n  tokenvalid:'p-button-warning',\r\n\r\n  errors: [],\r\n  // reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/\r\n \r\n}),\r\nmethods:{\r\n     validate(){\r\n    if(this.token!=null){\r\n        const config={\r\n          headers:{\r\n            'content-type':'application/json'\r\n          }\r\n        }\r\n        axios.get('http://127.0.0.1:8000/api/accounts/activate/NA/'+this.token,          \r\n          config)\r\n        .then(response=>{\r\n        console.log(response.status),\r\n        console.log(response.data),\r\n        this.$router.push('/Login')})\r\n        .catch(e=>{\r\n          console.log(e.response.status)\r\n          if(e.response.status==400){\r\n              this.$toast.add({severity:'error', summary: e.response.data, detail:'invalid token', life: 3000});\r\n          }\r\n          \r\n        })\r\n     \r\n    }\r\n    else{\r\n       this.$toast.add({severity:'error', summary: 'Empty fields', detail:'Token must be provided ', life: 3000});\r\n\r\n    }\r\n    \r\n  },\r\n  back_to_login(){\r\n      this.$router.push('/Login')\r\n\r\n  }\r\n},\r\nwatch:{\r\n     token:function(){\r\n      if(this.token!=null){\r\n        this.tokenvalid='p-button-success'\r\n      }\r\n      else{\r\n      this.tokenvalid='p-button-danger'\r\n    }\r\n    },\r\n}\r\n    \r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}