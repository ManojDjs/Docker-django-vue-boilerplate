{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport Json from \"@/assets/endpoints.json\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      dairy_label_link: Json[0]['Course']['DAIRYLABLE'],\n      dairy_link: Json[0]['Course']['DAIRY'],\n      server: Json[0]['Course']['SERVER'],\n      dairy_update_link: Json[0]['Course']['DAIRYUPDATE'],\n      course_content: [],\n      video_link: '',\n      Dairy_text: '',\n      Dairy: '',\n      Dairy_labels: [],\n      Dairy_Answers: [],\n      Exisitng_dairy: [],\n      edit: \"OFF\",\n      display: false,\n      edittext: \"\",\n      editqsn: \"\",\n      editid: null\n    };\n  },\n  methods: {\n    delete_dairy(id) {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.delete(this.server + this.dairy_update_link + id, {\n        'headers': headers\n      }).then(resp => {\n        console.log(resp.status);\n        this.get_existing_dairy();\n      });\n    },\n    create_object() {\n      var i;\n      // console.log(this.get_questions.data) checking questions\n      for (i = 0; i < this.Dairy_labels.length; i++) {\n        this.Dairy_Answers.push({\n          \"id\": this.Dairy_labels[i]['id'],\n          \"answer\": \"\",\n          \"Text\": this.Dairy_labels[i]['Text'],\n          \"DairyNumber\": this.Dairy_labels[i]['DairyNumber']\n        });\n      }\n      //   console.log(this.Dairy_Answers)\n    },\n\n    get_dairy_labels() {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.get(this.server + this.dairy_label_link, {\n        'headers': headers\n      }).then(resp => {\n        // console.log(\"im in dairy labels\")\n        // console.log(resp.data)\n        this.Dairy_labels = resp.data;\n        this.create_object();\n      });\n    },\n    get_existing_dairy() {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.get(this.server + this.dairy_link, {\n        'headers': headers\n      }).then(resp => {\n        this.Exisitng_dairy = resp.data;\n      });\n    },\n    submit_dairy(id, text) {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.post(this.server + this.dairy_link, {\n        \"Dairy_label\": id,\n        \"Dairy_Text\": text,\n        \"Wrote_by\": this.uid\n      }, {\n        'headers': headers\n      }).then(resp => {\n        if (resp.status == 201) {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Dairy submited ',\n            detail: 'successfully , submitted your dairy',\n            life: 3000\n          }), this.get_existing_dairy();\n          this.edit = 'ON';\n        }\n      });\n    },\n    update_dairy(id, qsn, txt) {\n      this.display = true;\n      this.edittext = txt;\n      this.editqsn = qsn;\n      this.editid = id;\n    },\n    finalupdate() {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.put(this.server + this.dairy_update_link + this.editid, {\n        \"id\": this.editid,\n        \"Dairy_label\": this.editqsn,\n        \"Dairy_Text\": this.edittext,\n        \"Wrote_by\": this.uid\n      }, {\n        'headers': headers\n      }).then(resp => {\n        if (resp.status == 200) {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'updated ',\n            detail: 'successfully , updated your dairy',\n            life: 3000\n          });\n          this.edittext = \"\", this.editqsn = \"\", this.editid = null, this.get_existing_dairy();\n          this.display = false;\n        }\n      });\n    },\n    edit_mode() {\n      this.edit = \"ON\";\n    },\n    edit_mode_off() {\n      this.edit = \"OFF\";\n      this.Dairy_labels = [];\n      this.Dairy_Answers = [];\n      this.get_dairy_labels();\n    }\n  },\n  computed: {\n    ...mapState(['token', 'user', 'uid', 'heading', 'height', 'course'])\n  },\n  created() {\n    this.get_dairy_labels();\n    this.get_existing_dairy();\n  }\n};","map":{"version":3,"mappings":"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","names":["mapState","Json","axios","data","dairy_label_link","dairy_link","server","dairy_update_link","course_content","video_link","Dairy_text","Dairy","Dairy_labels","Dairy_Answers","Exisitng_dairy","edit","display","edittext","editqsn","editid","methods","delete_dairy","id","headers","token","delete","then","resp","console","log","status","get_existing_dairy","create_object","i","length","push","get_dairy_labels","get","submit_dairy","text","post","uid","$toast","add","severity","summary","detail","life","update_dairy","qsn","txt","finalupdate","put","edit_mode","edit_mode_off","computed","created"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\views\\Dairy.vue"],"sourcesContent":["<template>\r\n    <div class=\"Dairy\">\r\n        <h1>Diary</h1>\r\n        <Toast position=\"center\" />\r\n        <div class=\"p-p-3 card\">\r\n    <Button type=\"Button\" icon=\"pi pi-book\" label=\"Add Dairy\" v-on:click=\"edit_mode_off\" class=\"p-mr-2\" />\r\n    <Button type=\"Button\" icon=\"pi pi-pencil\" label=\"Exisitng Dairy\" v-on:click=\"edit_mode\"  class=\"p-button-danger\"/>\r\n        </div>\r\n        <div class=\" p-shadow-5\" v-if=\"edit=='OFF'\">\r\n            <div v-for='(item,index) in Dairy_Answers' :key='index'>\r\n            <Card style=\"width:100%\">\r\n            <template #header>\r\n            </template>\r\n            <template #title>\r\n              <h5>  {{ item.Text }} </h5>\r\n            </template>\r\n            <template subtitle>\r\n            </template>\r\n            <template #content>\r\n                <Textarea v-model=\"item.answer\" :autoResize=\"true\" rows=\"5\" cols=\"50\" />\r\n            </template>\r\n            <template #footer>\r\n                <Button icon=\"pi pi-check\" label=\"Save\" v-on:click=\"submit_dairy(item.id,item.answer)\" />\r\n               \r\n            </template>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n        <div class=\" p-shadow-5\" v-if=\"edit=='ON'\">\r\n        <ScrollPanel style=\"width: 100%; height: 900%\">\r\n            <div v-for='(item,index) in Exisitng_dairy' :key='index'>\r\n            <Card style=\"width:100%\">\r\n            <template #header>\r\n            </template>\r\n            <template #title>\r\n                {{ item.Date }}\r\n            </template>\r\n            <template subtitle>\r\n                <h1>manoj</h1>\r\n            </template>\r\n            <template #content>\r\n                <p>{{item.Dairy_Text }}</p>\r\n            </template>\r\n            <template #footer>\r\n                <Button icon=\"pi pi-check\" label=\"Edit\" v-on:click=\"update_dairy(item.id,item.Dairy_label,item.Dairy_Text)\"/>\r\n                <Button icon=\"pi pi-trash\" label=\"Delete\" v-on:click=\"delete_dairy(item.id)\" class=\"p-button-secondary\" style=\"margin-left: .5em\" />\r\n            </template>\r\n            </Card>\r\n         </div>\r\n        </ScrollPanel>\r\n            <Dialog header=\"Edit Below Dairy\" v-model:visible=\"display\" style=\"width:90%\">\r\n                <h1>Question</h1>\r\n                 {{ editqsn}}\r\n                <h1>Your dairy</h1>\r\n                <Textarea v-model=\"edittext\" :autoResize=\"true\" rows=\"5\" cols=\"50\" />\r\n                <Divider/>\r\n                <Button icon=\"pi pi-save\" label=\"Submit\" class=\"p-button-secondary\" style=\"margin-left: .5em\" v-on:click=\"finalupdate\" />\r\n          </Dialog>\r\n\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport Json from \"@/assets/endpoints.json\"\r\nimport axios from 'axios'\r\nexport default {\r\n     data(){\r\n        return{\r\n            \r\n            dairy_label_link:Json[0]['Course']['DAIRYLABLE'],\r\n            dairy_link:Json[0]['Course']['DAIRY'],\r\n            server:Json[0]['Course']['SERVER'],\r\n            dairy_update_link:Json[0]['Course']['DAIRYUPDATE'],\r\n            course_content:[],\r\n            video_link:'',\r\n            Dairy_text:'',\r\n            Dairy:'',\r\n            Dairy_labels:[],\r\n            Dairy_Answers:[],\r\n            Exisitng_dairy:[],\r\n            edit:\"OFF\",\r\n            display:false,\r\n            edittext:\"\",\r\n            editqsn:\"\",\r\n            editid:null\r\n            \r\n         \r\n        }\r\n    },\r\n    methods:{\r\n        delete_dairy(id){\r\n            const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n            axios.delete(this.server+this.dairy_update_link+id,{'headers':headers}\r\n            ).then(resp=>{\r\n                console.log(resp.status)\r\n                this.get_existing_dairy()\r\n                 \r\n                \r\n            })\r\n        },\r\n         create_object(){\r\n                     var i;\r\n                // console.log(this.get_questions.data) checking questions\r\n                    for(i=0;i<this.Dairy_labels.length;i++){\r\n                    \r\n                        \r\n                        this.Dairy_Answers.push({\r\n                            \"id\":this.Dairy_labels[i]['id'],\r\n                            \"answer\": \"\",\r\n                            \r\n                            \"Text\": this.Dairy_labels[i]['Text'],\r\n                            \"DairyNumber\":this.Dairy_labels[i]['DairyNumber'],\r\n                            \r\n                        })\r\n                      }\r\n                    //   console.log(this.Dairy_Answers)\r\n                      },\r\n        get_dairy_labels(){\r\n             const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n            axios.get(this.server+this.dairy_label_link,{'headers':headers}\r\n            ).then(resp=>{\r\n                // console.log(\"im in dairy labels\")\r\n                // console.log(resp.data)\r\n                this.Dairy_labels=resp.data\r\n                this.create_object()\r\n                \r\n            })\r\n        },\r\n        get_existing_dairy(){\r\n            const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n            axios.get(this.server+this.dairy_link,{'headers':headers}\r\n            ).then(resp=>{\r\n                this.Exisitng_dairy=resp.data\r\n                \r\n            })\r\n        },\r\n        submit_dairy(id,text){\r\n            const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n             axios.post(this.server+this.dairy_link,\r\n              {\"Dairy_label\":id,\r\n                \"Dairy_Text\": text,\r\n                \"Wrote_by\": this.uid\r\n                  \r\n              },\r\n              {'headers':headers})\r\n            .then(resp => {\r\n                    if(resp.status==201){\r\n                        \r\n                        this.$toast.add({severity:'success', summary: 'Dairy submited ', detail:'successfully , submitted your dairy', life: 3000}),\r\n                        this.get_existing_dairy()\r\n                        this.edit='ON'\r\n                        \r\n\r\n                    }\r\n                   })\r\n        },\r\n       \r\n        update_dairy(id,qsn,txt){\r\n            this.display=true\r\n            this.edittext=txt\r\n            this.editqsn=qsn\r\n            this.editid=id\r\n\r\n        },\r\n        finalupdate(){\r\n             const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n             axios.put(this.server+this.dairy_update_link+this.editid,\r\n            {\r\n                \"id\":this.editid,\r\n                \"Dairy_label\":this.editqsn,\r\n                \"Dairy_Text\": this.edittext,\r\n                \"Wrote_by\": this.uid\r\n                \r\n            },{'headers':headers})\r\n          .then(resp => {\r\n              if(resp.status==200){\r\n                  this.$toast.add({severity:'success', summary: 'updated ', detail:'successfully , updated your dairy', life: 3000})\r\n                 this.edittext=\"\",\r\n                 this.editqsn=\"\",\r\n                 this.editid=null,\r\n\r\n                 this.get_existing_dairy()\r\n                 this.display=false\r\n              }\r\n          })\r\n\r\n        },\r\n        edit_mode(){\r\n            this.edit=\"ON\"\r\n\r\n        },\r\n        edit_mode_off(){\r\n            this.edit=\"OFF\"\r\n            this.Dairy_labels=[]\r\n            this.Dairy_Answers=[]\r\n            this.get_dairy_labels()\r\n            \r\n\r\n        }\r\n    },\r\n    computed:{\r\n    ...mapState([\r\n      'token',\r\n      'user',\r\n      'uid',\r\n      'heading',\r\n      'height',\r\n      'course',\r\n    ])\r\n     },\r\n     created(){\r\n         this.get_dairy_labels()\r\n         this.get_existing_dairy()\r\n     }\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.Dairy{\r\n    text-align:center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}