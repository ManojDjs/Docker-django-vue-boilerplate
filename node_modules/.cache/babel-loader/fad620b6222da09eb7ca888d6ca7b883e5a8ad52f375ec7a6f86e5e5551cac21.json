{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nimport Json from \"@/assets/endpoints.json\";\n\n// import { computed } from 'vue'\nexport default {\n  data() {\n    return {\n      isq_link: Json[0][\"DEMO\"],\n      total: Json[0][\"DEMO\"][\"Total\"],\n      questionlink: Json[0][\"DEMO\"][\"Questions\"],\n      submission_link: Json[0][\"DEMO\"][\"Answers\"],\n      edit: Json[0][\"DEMO\"][\"Edit\"],\n      sublink: \"Demo\",\n      status: this.$store.getters.get_q_status,\n      value: [0],\n      localstatus: \"\",\n      Answers_KV: [],\n      Submisions: [],\n      submitstatus: false,\n      yesno: [\"YES\", \"NO\"],\n      gender: [\"Male\", \"Female\"],\n      yesnoanswer: null,\n      selected: null,\n      oprions: [{\n        name: \"None of the time\",\n        value: 1\n      }, {\n        name: \"Rarely\",\n        value: 2\n      }, {\n        name: \"Some of the time\",\n        value: 3\n      }, {\n        name: \"Often\",\n        value: 4\n      }, {\n        name: \"All of the Time\",\n        value: 5\n      }],\n      take_questions: false,\n      localedit: false\n    };\n  },\n  computed: {\n    ...mapGetters([\"get_questions\", \"get_q_status\", \"get_qa\", \"getuser\"])\n  },\n  methods: {\n    check() {\n      let link = this.total;\n      this.$store.dispatch(\"check_q_status\", link);\n    },\n    register_user_qa() {\n      console.log(\"you clicked\");\n      if (this.get_q_status == \"NR\") {\n        this.$store.dispatch(\"registeruser\", this.total);\n        this.$router.go();\n      }\n    },\n    create_object() {\n      var i;\n      // console.log(this.get_questions.data) checking questions\n      for (i = 0; i < this.get_questions.length; i++) {\n        this.Answers_KV.push({\n          qid: this.get_questions[i][\"id\"],\n          answer: \"\",\n          // \"main_question_set\":this.getuser,\n          question_name: this.get_questions[i][\"question\"],\n          question_type: this.get_questions[i][\"question_type\"],\n          question_field: this.get_questions[i][\"question_field\"]\n          // \"answer_by\": this.getuser\n        });\n      }\n\n      console.log(this.Answers_KV);\n    },\n    submit() {\n      var i;\n      var checking = 0;\n      console.log(checking);\n      // console.log(this.get_questions.data) checking questions\n      for (i = 0; i < this.Answers_KV.length; i++) {\n        this.Submisions.push({\n          answer: this.Answers_KV[i][\"answer\"],\n          editid: this.Answers_KV[i][\"editid\"],\n          qid: this.Answers_KV[i][\"qid\"],\n          question_name: this.Answers_KV[i][\"question_name\"],\n          question_type: this.Answers_KV[i][\"question_type\"]\n        });\n      }\n      // console.log(this.Submisions)\n      if (this.get_q_status == \"RS\") {\n        if (this.Submisions.length != this.Answers_KV.length) {\n          var q = this.Answers_KV.length;\n          var b = this.Submisions.length;\n          var len = q - b;\n          this.$toast.add({\n            severity: \"error\",\n            summary: \"Empty fields\",\n            detail: \"there are  \" + len + \"empty fields\",\n            life: 5000\n          });\n          this.Submisions = [];\n        } else {\n          console.log(\"no empty fields\");\n          console.log(\"I am calling store \");\n          console.log(this.Submisions);\n          let link = this.submission_link;\n          let submisiondata = this.Submisions;\n          console.log(\"iam checking length\");\n          console.log(this.Submisions.length);\n          this.$store.dispatch(\"submitanswers\", {\n            link,\n            submisiondata\n          }).then(() => this.$toast.add({\n            severity: \"success\",\n            summary: \"Answers submitted\",\n            detail: \"submitted your answers , absorb below\",\n            life: 3000\n          }, this.check(), this.localedit = true)).catch(err => console.log(err));\n\n          // this.$router.go()\n          this.Submisions = [];\n        }\n      }\n    },\n    edit_questions() {\n      var i;\n      this.Answers_KV = [];\n      this.Submisions = [];\n      for (i = 0; i < this.get_qa[0][this.sublink].length; i++) {\n        this.Answers_KV.push({\n          editid: this.get_qa[0][this.sublink][i][\"id\"],\n          qid: this.get_qa[0][this.sublink][i][\"question_name\"][\"id\"],\n          answer: this.get_qa[0][this.sublink][i][\"answer\"],\n          // \"main_question_set\":this.getuser,\n          question_name: this.get_qa[0][this.sublink][i][\"question_name\"][\"question\"],\n          question_type: this.get_qa[0][this.sublink][i][\"question_name\"][\"question_type\"]\n          // \"answer_by\": this.getuser\n        });\n      }\n\n      console.log(\"after creating edit answers\");\n      console.log(this.Answers_KV);\n      this.localedit = true;\n    },\n    save() {\n      var i;\n      this.Submisions = [];\n      console.log(\" i am here after save button\");\n      console.log(this.Answers_KV);\n      for (i = 0; i < this.Answers_KV.length; i++) {\n        this.Submisions.push({\n          answer: this.Answers_KV[i][\"answer\"],\n          editid: this.Answers_KV[i][\"editid\"],\n          qid: this.Answers_KV[i][\"qid\"],\n          question_name: this.Answers_KV[i][\"question_name\"],\n          question_type: this.Answers_KV[i][\"question_type\"]\n        });\n      }\n      // console.log(this.Submisions)\n\n      if (this.get_q_status == \"EDIT\") {\n        console.log(this.Submisions);\n        console.log(\"no empty fields\");\n        console.log(\"I am calling store for save\");\n        console.log(this.Submisions);\n        let link = this.edit;\n        let submisiondata = this.Submisions;\n        this.$store.dispatch(\"save\", {\n          link,\n          submisiondata\n        }).then(() => this.$toast.add({\n          severity: \"success\",\n          summary: \"Answers updated\",\n          detail: \"updated your answers , absorb below\",\n          life: 3000\n        })).catch(err => console.log(err));\n        this.Submisions = [];\n        this.Answers_KV = [];\n        this.localedit = false;\n        this.check();\n      }\n    }\n  },\n  watch: {\n    get_q_status() {\n      if (this.get_q_status == \"NR\") {\n        this.take_questions = true;\n      }\n      if (this.get_q_status == \"RS\") {\n        this.$store.dispatch(\"questions_taker\", this.questionlink);\n        this.create_object();\n      }\n      if (this.get_q_status == \"RF\") {\n        console.log(\" iam here\");\n        if (this.get_qa[0][\"total_answers\"] == \"0\") {\n          this.$store.dispatch(\"questions_taker\", this.questionlink);\n          this.localstatus = \"0 answers so far\", this.get_q_status == \"RS\";\n        }\n      }\n    },\n    localedit() {\n      this.check();\n    },\n    submitstatus() {\n      this.check();\n    }\n  },\n  created() {\n    this.$store.dispatch(\"set_heading\", \"Dashboard\");\n    this.check();\n  }\n};","map":{"version":3,"mappings":";AAIA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,IAAG,MAAO,yBAAyB;;AAE1C;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAEF,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;MACzBG,KAAK,EAAEH,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;MAC/BI,YAAY,EAAEJ,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;MAC1CK,eAAe,EAAEL,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;MAC3CM,IAAI,EAAEN,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;MAC7BO,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,YAAY;MACxCC,KAAK,EAAE,CAAC,CAAC,CAAC;MACVC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACpBC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;MAC1BC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,kBAAkB;QAAEV,KAAK,EAAE;MAAE,CAAC,EACtC;QAAEU,IAAI,EAAE,QAAQ;QAAEV,KAAK,EAAE;MAAE,CAAC,EAC5B;QAAEU,IAAI,EAAE,kBAAkB;QAAEV,KAAK,EAAE;MAAE,CAAC,EACtC;QAAEU,IAAI,EAAE,OAAO;QAAEV,KAAK,EAAE;MAAE,CAAC,EAC3B;QAAEU,IAAI,EAAE,iBAAiB;QAAEV,KAAK,EAAE;MAAE,CAAC,CACtC;MACDW,cAAc,EAAE,KAAK;MACrBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAG1B,UAAU,CAAC,CAAC,eAAe,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,CAAC;EACtE,CAAC;EACD2B,OAAO,EAAE;IACPC,KAAK,GAAG;MACN,IAAIC,IAAG,GAAI,IAAI,CAACzB,KAAK;MACrB,IAAI,CAACM,MAAM,CAACoB,QAAQ,CAAC,gBAAgB,EAAED,IAAI,CAAC;IAC9C,CAAC;IACDE,gBAAgB,GAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAI,IAAI,CAACrB,YAAW,IAAK,IAAI,EAAE;QAC7B,IAAI,CAACF,MAAM,CAACoB,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC1B,KAAK,CAAC;QAChD,IAAI,CAAC8B,OAAO,CAACC,EAAE,EAAE;MACnB;IACF,CAAC;IACDC,aAAa,GAAG;MACd,IAAIC,CAAC;MACL;MACA,KAAKA,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACC,aAAa,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC9C,IAAI,CAACtB,UAAU,CAACyB,IAAI,CAAC;UACnBC,GAAG,EAAE,IAAI,CAACH,aAAa,CAACD,CAAC,CAAC,CAAC,IAAI,CAAC;UAChCK,MAAM,EAAE,EAAE;UACV;UACAC,aAAa,EAAE,IAAI,CAACL,aAAa,CAACD,CAAC,CAAC,CAAC,UAAU,CAAC;UAChDO,aAAa,EAAE,IAAI,CAACN,aAAa,CAACD,CAAC,CAAC,CAAC,eAAe,CAAC;UACrDQ,cAAc,EAAE,IAAI,CAACP,aAAa,CAACD,CAAC,CAAC,CAAC,gBAAgB;UACtD;QACF,CAAC,CAAC;MACJ;;MACAL,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,UAAU,CAAC;IAC9B,CAAC;IACD+B,MAAM,GAAG;MACP,IAAIT,CAAC;MACL,IAAIU,QAAO,GAAI,CAAC;MAChBf,OAAO,CAACC,GAAG,CAACc,QAAQ,CAAC;MACrB;MACA,KAAKV,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACtB,UAAU,CAACwB,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC3C,IAAI,CAACrB,UAAU,CAACwB,IAAI,CAAC;UACnBE,MAAM,EAAE,IAAI,CAAC3B,UAAU,CAACsB,CAAC,CAAC,CAAC,QAAQ,CAAC;UACpCW,MAAM,EAAE,IAAI,CAACjC,UAAU,CAACsB,CAAC,CAAC,CAAC,QAAQ,CAAC;UACpCI,GAAG,EAAE,IAAI,CAAC1B,UAAU,CAACsB,CAAC,CAAC,CAAC,KAAK,CAAC;UAC9BM,aAAa,EAAE,IAAI,CAAC5B,UAAU,CAACsB,CAAC,CAAC,CAAC,eAAe,CAAC;UAClDO,aAAa,EAAE,IAAI,CAAC7B,UAAU,CAACsB,CAAC,CAAC,CAAC,eAAe;QACnD,CAAC,CAAC;MACJ;MACA;MACA,IAAI,IAAI,CAACzB,YAAW,IAAK,IAAI,EAAE;QAC7B,IAAI,IAAI,CAACI,UAAU,CAACuB,MAAK,IAAK,IAAI,CAACxB,UAAU,CAACwB,MAAM,EAAE;UACpD,IAAIU,IAAI,IAAI,CAAClC,UAAU,CAACwB,MAAM;UAC9B,IAAIW,IAAI,IAAI,CAAClC,UAAU,CAACuB,MAAM;UAC9B,IAAIY,GAAE,GAAIF,IAAIC,CAAC;UACf,IAAI,CAACE,MAAM,CAACC,GAAG,CAAC;YACdC,QAAQ,EAAE,OAAO;YACjBC,OAAO,EAAE,cAAc;YACvBC,MAAM,EAAE,aAAY,GAAIL,GAAE,GAAI,cAAc;YAC5CM,IAAI,EAAE;UACR,CAAC,CAAC;UACF,IAAI,CAACzC,UAAS,GAAI,EAAE;QACtB,OAAO;UACLgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9BD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAAC;UAC5B,IAAIa,IAAG,GAAI,IAAI,CAACvB,eAAe;UAC/B,IAAIoD,aAAY,GAAI,IAAI,CAAC1C,UAAU;UACnCgB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAACuB,MAAM,CAAC;UAEnC,IAAI,CAAC7B,MAAK,CACPoB,QAAQ,CAAC,eAAe,EAAE;YAAED,IAAI;YAAE6B;UAAc,CAAC,EACjDC,IAAI,CAAC,MACJ,IAAI,CAACP,MAAM,CAACC,GAAG,CACb;YACEC,QAAQ,EAAE,SAAS;YACnBC,OAAO,EAAE,mBAAmB;YAC5BC,MAAM,EAAE,uCAAuC;YAC/CC,IAAI,EAAE;UACR,CAAC,EACD,IAAI,CAAC7B,KAAK,EAAE,EACX,IAAI,CAACH,SAAQ,GAAI,IAAI,CACxB,CACF,CAECmC,KAAK,CAAEC,GAAG,IAAK7B,OAAO,CAACC,GAAG,CAAC4B,GAAG,CAAC,CAAC;;UAEnC;UACA,IAAI,CAAC7C,UAAS,GAAI,EAAE;QACtB;MACF;IACF,CAAC;IACD8C,cAAc,GAAG;MACf,IAAIzB,CAAC;MACL,IAAI,CAACtB,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,UAAS,GAAI,EAAE;MACpB,KAAKqB,IAAI,CAAC,EAAEA,IAAI,IAAI,CAAC0B,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC+B,MAAM,EAAEF,CAAC,EAAE,EAAE;QACxD,IAAI,CAACtB,UAAU,CAACyB,IAAI,CAAC;UACnBQ,MAAM,EAAE,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC6B,CAAC,CAAC,CAAC,IAAI,CAAC;UAC7CI,GAAG,EAAE,IAAI,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC6B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;UAC3DK,MAAM,EAAE,IAAI,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC6B,CAAC,CAAC,CAAC,QAAQ,CAAC;UACjD;UACAM,aAAa,EACX,IAAI,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC6B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC;UAC9DO,aAAa,EACX,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACvD,OAAO,CAAC,CAAC6B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,eAAe;UAClE;QACF,CAAC,CAAC;MACJ;;MACAL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,UAAU,CAAC;MAC5B,IAAI,CAACU,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDuC,IAAI,GAAG;MACL,IAAI3B,CAAC;MACL,IAAI,CAACrB,UAAS,GAAI,EAAE;MACpBgB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,UAAU,CAAC;MAC5B,KAAKsB,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACtB,UAAU,CAACwB,MAAM,EAAEF,CAAC,EAAE,EAAE;QAC3C,IAAI,CAACrB,UAAU,CAACwB,IAAI,CAAC;UACnBE,MAAM,EAAE,IAAI,CAAC3B,UAAU,CAACsB,CAAC,CAAC,CAAC,QAAQ,CAAC;UACpCW,MAAM,EAAE,IAAI,CAACjC,UAAU,CAACsB,CAAC,CAAC,CAAC,QAAQ,CAAC;UACpCI,GAAG,EAAE,IAAI,CAAC1B,UAAU,CAACsB,CAAC,CAAC,CAAC,KAAK,CAAC;UAC9BM,aAAa,EAAE,IAAI,CAAC5B,UAAU,CAACsB,CAAC,CAAC,CAAC,eAAe,CAAC;UAClDO,aAAa,EAAE,IAAI,CAAC7B,UAAU,CAACsB,CAAC,CAAC,CAAC,eAAe;QACnD,CAAC,CAAC;MACJ;MACA;;MAEA,IAAI,IAAI,CAACzB,YAAW,IAAK,MAAM,EAAE;QAC/BoB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAAC;QAC5BgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9BD,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAAC;QAC5B,IAAIa,IAAG,GAAI,IAAI,CAACtB,IAAI;QACpB,IAAImD,aAAY,GAAI,IAAI,CAAC1C,UAAU;QAEnC,IAAI,CAACN,MAAK,CACPoB,QAAQ,CAAC,MAAM,EAAE;UAAED,IAAI;UAAE6B;QAAc,CAAC,EACxCC,IAAI,CAAC,MACJ,IAAI,CAACP,MAAM,CAACC,GAAG,CAAC;UACdC,QAAQ,EAAE,SAAS;UACnBC,OAAO,EAAE,iBAAiB;UAC1BC,MAAM,EAAE,qCAAqC;UAC7CC,IAAI,EAAE;QACR,CAAC,EACH,CACCG,KAAK,CAAEC,GAAG,IAAK7B,OAAO,CAACC,GAAG,CAAC4B,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC7C,UAAS,GAAI,EAAE;QACpB,IAAI,CAACD,UAAS,GAAI,EAAE;QACpB,IAAI,CAACU,SAAQ,GAAI,KAAK;QACtB,IAAI,CAACG,KAAK,EAAE;MACd;IACF;EACF,CAAC;EACDqC,KAAK,EAAE;IACLrD,YAAY,GAAG;MACb,IAAI,IAAI,CAACA,YAAW,IAAK,IAAI,EAAE;QAC7B,IAAI,CAACY,cAAa,GAAI,IAAI;MAC5B;MACA,IAAI,IAAI,CAACZ,YAAW,IAAK,IAAI,EAAE;QAC7B,IAAI,CAACF,MAAM,CAACoB,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAACzB,YAAY,CAAC;QAC1D,IAAI,CAAC+B,aAAa,EAAE;MACtB;MACA,IAAI,IAAI,CAACxB,YAAW,IAAK,IAAI,EAAE;QAC7BoB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,IAAI,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,KAAK,GAAG,EAAE;UAC1C,IAAI,CAACrD,MAAM,CAACoB,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAACzB,YAAY,CAAC;UACzD,IAAI,CAACS,WAAU,GAAI,kBAAkB,EAAG,IAAI,CAACF,YAAW,IAAK,IAAI;QACpE;MACF;IACF,CAAC;IACDa,SAAS,GAAG;MACV,IAAI,CAACG,KAAK,EAAE;IACd,CAAC;IACDX,YAAY,GAAG;MACb,IAAI,CAACW,KAAK,EAAE;IACd;EACF,CAAC;EACDsC,OAAO,GAAG;IACR,IAAI,CAACxD,MAAM,CAACoB,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC;IAChD,IAAI,CAACF,KAAK,EAAE;EACd;AACF,CAAC","names":["mapGetters","Json","data","isq_link","total","questionlink","submission_link","edit","sublink","status","$store","getters","get_q_status","value","localstatus","Answers_KV","Submisions","submitstatus","yesno","gender","yesnoanswer","selected","oprions","name","take_questions","localedit","computed","methods","check","link","dispatch","register_user_qa","console","log","$router","go","create_object","i","get_questions","length","push","qid","answer","question_name","question_type","question_field","submit","checking","editid","q","b","len","$toast","add","severity","summary","detail","life","submisiondata","then","catch","err","edit_questions","get_qa","save","watch","created"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\views\\sample.vue"],"sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport Json from \"@/assets/endpoints.json\";\r\n\r\n// import { computed } from 'vue'\r\nexport default {\r\n  data() {\r\n    return {\r\n      isq_link: Json[0][\"DEMO\"],\r\n      total: Json[0][\"DEMO\"][\"Total\"],\r\n      questionlink: Json[0][\"DEMO\"][\"Questions\"],\r\n      submission_link: Json[0][\"DEMO\"][\"Answers\"],\r\n      edit: Json[0][\"DEMO\"][\"Edit\"],\r\n      sublink: \"Demo\",\r\n      status: this.$store.getters.get_q_status,\r\n      value: [0],\r\n      localstatus: \"\",\r\n      Answers_KV: [],\r\n      Submisions: [],\r\n      submitstatus: false,\r\n      yesno: [\"YES\", \"NO\"],\r\n      gender: [\"Male\", \"Female\"],\r\n      yesnoanswer: null,\r\n      selected: null,\r\n      oprions: [\r\n        { name: \"None of the time\", value: 1 },\r\n        { name: \"Rarely\", value: 2 },\r\n        { name: \"Some of the time\", value: 3 },\r\n        { name: \"Often\", value: 4 },\r\n        { name: \"All of the Time\", value: 5 },\r\n      ],\r\n      take_questions: false,\r\n      localedit: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"get_questions\", \"get_q_status\", \"get_qa\", \"getuser\"]),\r\n  },\r\n  methods: {\r\n    check() {\r\n      let link = this.total;\r\n      this.$store.dispatch(\"check_q_status\", link);\r\n    },\r\n    register_user_qa() {\r\n      console.log(\"you clicked\");\r\n      if (this.get_q_status == \"NR\") {\r\n        this.$store.dispatch(\"registeruser\", this.total);\r\n        this.$router.go();\r\n      }\r\n    },\r\n    create_object() {\r\n      var i;\r\n      // console.log(this.get_questions.data) checking questions\r\n      for (i = 0; i < this.get_questions.length; i++) {\r\n        this.Answers_KV.push({\r\n          qid: this.get_questions[i][\"id\"],\r\n          answer: \"\",\r\n          // \"main_question_set\":this.getuser,\r\n          question_name: this.get_questions[i][\"question\"],\r\n          question_type: this.get_questions[i][\"question_type\"],\r\n          question_field: this.get_questions[i][\"question_field\"],\r\n          // \"answer_by\": this.getuser\r\n        });\r\n      }\r\n      console.log(this.Answers_KV);\r\n    },\r\n    submit() {\r\n      var i;\r\n      var checking = 0;\r\n      console.log(checking);\r\n      // console.log(this.get_questions.data) checking questions\r\n      for (i = 0; i < this.Answers_KV.length; i++) {\r\n        this.Submisions.push({\r\n          answer: this.Answers_KV[i][\"answer\"],\r\n          editid: this.Answers_KV[i][\"editid\"],\r\n          qid: this.Answers_KV[i][\"qid\"],\r\n          question_name: this.Answers_KV[i][\"question_name\"],\r\n          question_type: this.Answers_KV[i][\"question_type\"],\r\n        });\r\n      }\r\n      // console.log(this.Submisions)\r\n      if (this.get_q_status == \"RS\") {\r\n        if (this.Submisions.length != this.Answers_KV.length) {\r\n          var q = this.Answers_KV.length;\r\n          var b = this.Submisions.length;\r\n          var len = q - b;\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Empty fields\",\r\n            detail: \"there are  \" + len + \"empty fields\",\r\n            life: 5000,\r\n          });\r\n          this.Submisions = [];\r\n        } else {\r\n          console.log(\"no empty fields\");\r\n          console.log(\"I am calling store \");\r\n          console.log(this.Submisions);\r\n          let link = this.submission_link;\r\n          let submisiondata = this.Submisions;\r\n          console.log(\"iam checking length\");\r\n          console.log(this.Submisions.length);\r\n\r\n          this.$store\r\n            .dispatch(\"submitanswers\", { link, submisiondata })\r\n            .then(() =>\r\n              this.$toast.add(\r\n                {\r\n                  severity: \"success\",\r\n                  summary: \"Answers submitted\",\r\n                  detail: \"submitted your answers , absorb below\",\r\n                  life: 3000,\r\n                },\r\n                this.check(),\r\n                (this.localedit = true)\r\n              )\r\n            )\r\n\r\n            .catch((err) => console.log(err));\r\n\r\n          // this.$router.go()\r\n          this.Submisions = [];\r\n        }\r\n      }\r\n    },\r\n    edit_questions() {\r\n      var i;\r\n      this.Answers_KV = [];\r\n      this.Submisions = [];\r\n      for (i = 0; i < this.get_qa[0][this.sublink].length; i++) {\r\n        this.Answers_KV.push({\r\n          editid: this.get_qa[0][this.sublink][i][\"id\"],\r\n          qid: this.get_qa[0][this.sublink][i][\"question_name\"][\"id\"],\r\n          answer: this.get_qa[0][this.sublink][i][\"answer\"],\r\n          // \"main_question_set\":this.getuser,\r\n          question_name:\r\n            this.get_qa[0][this.sublink][i][\"question_name\"][\"question\"],\r\n          question_type:\r\n            this.get_qa[0][this.sublink][i][\"question_name\"][\"question_type\"],\r\n          // \"answer_by\": this.getuser\r\n        });\r\n      }\r\n      console.log(\"after creating edit answers\");\r\n      console.log(this.Answers_KV);\r\n      this.localedit = true;\r\n    },\r\n    save() {\r\n      var i;\r\n      this.Submisions = [];\r\n      console.log(\" i am here after save button\");\r\n      console.log(this.Answers_KV);\r\n      for (i = 0; i < this.Answers_KV.length; i++) {\r\n        this.Submisions.push({\r\n          answer: this.Answers_KV[i][\"answer\"],\r\n          editid: this.Answers_KV[i][\"editid\"],\r\n          qid: this.Answers_KV[i][\"qid\"],\r\n          question_name: this.Answers_KV[i][\"question_name\"],\r\n          question_type: this.Answers_KV[i][\"question_type\"],\r\n        });\r\n      }\r\n      // console.log(this.Submisions)\r\n\r\n      if (this.get_q_status == \"EDIT\") {\r\n        console.log(this.Submisions);\r\n        console.log(\"no empty fields\");\r\n        console.log(\"I am calling store for save\");\r\n        console.log(this.Submisions);\r\n        let link = this.edit;\r\n        let submisiondata = this.Submisions;\r\n\r\n        this.$store\r\n          .dispatch(\"save\", { link, submisiondata })\r\n          .then(() =>\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Answers updated\",\r\n              detail: \"updated your answers , absorb below\",\r\n              life: 3000,\r\n            })\r\n          )\r\n          .catch((err) => console.log(err));\r\n        this.Submisions = [];\r\n        this.Answers_KV = [];\r\n        this.localedit = false;\r\n        this.check();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    get_q_status() {\r\n      if (this.get_q_status == \"NR\") {\r\n        this.take_questions = true;\r\n      }\r\n      if (this.get_q_status == \"RS\") {\r\n        this.$store.dispatch(\"questions_taker\", this.questionlink);\r\n        this.create_object();\r\n      }\r\n      if (this.get_q_status == \"RF\") {\r\n        console.log(\" iam here\");\r\n        if (this.get_qa[0][\"total_answers\"] == \"0\") {\r\n          this.$store.dispatch(\"questions_taker\", this.questionlink);\r\n          (this.localstatus = \"0 answers so far\"), this.get_q_status == \"RS\";\r\n        }\r\n      }\r\n    },\r\n    localedit() {\r\n      this.check();\r\n    },\r\n    submitstatus() {\r\n      this.check();\r\n    },\r\n  },\r\n  created() {\r\n    this.$store.dispatch(\"set_heading\", \"Dashboard\");\r\n    this.check();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-scrollpanel) {\r\n  p {\r\n    padding: 0.5rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n  & .button {\r\n    .p-selectbutton {\r\n      background: green;\r\n    }\r\n  }\r\n  &.custombar1 {\r\n    .p-scrollpanel-wrapper {\r\n      border-right: 9px solid var(--surface-b);\r\n    }\r\n\r\n    .p-scrollpanel-bar {\r\n      background-color: var(--primary-color);\r\n      opacity: 1;\r\n      transition: background-color 0.2s;\r\n\r\n      &:hover {\r\n        background-color: #007ad9;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.custombar2 {\r\n    .p-scrollpanel-wrapper {\r\n      border-right: 9px solid var(--surface-b);\r\n      border-bottom: 9px solid var(--surface-b);\r\n    }\r\n\r\n    .p-scrollpanel-bar {\r\n      background-color: var(--surface-d);\r\n      border-radius: 0;\r\n      opacity: 1;\r\n      transition: background-color 0.2s;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}