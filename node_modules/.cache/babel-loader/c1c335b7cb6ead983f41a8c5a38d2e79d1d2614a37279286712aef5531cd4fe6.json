{"ast":null,"code":"import { toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ebc5110\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \" No Reocrds found for you\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"p-m-2\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"click below button to start questionnaire\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"p-field p-col\"\n};\nconst _hoisted_5 = {\n  class: \"demo-container p-pl-6 p-pr-6\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2\n};\nconst _hoisted_8 = {\n  class: \"demo-container p-pl-6 p-pr-6\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nconst _hoisted_10 = {\n  class: \"p-tag\"\n};\nconst _hoisted_11 = {\n  class: \"p-field p-col p-p-2\"\n};\nconst _hoisted_12 = {\n  class: \"demo-container p-pl-6 p-pr-6\"\n};\nconst _hoisted_13 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Toast = _resolveComponent(\"Toast\");\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Panel = _resolveComponent(\"Panel\");\n  const _component_Dropdown = _resolveComponent(\"Dropdown\");\n  const _component_Slider = _resolveComponent(\"Slider\");\n  const _component_SelectButton = _resolveComponent(\"SelectButton\");\n  const _component_Divider = _resolveComponent(\"Divider\");\n  const _component_Badge = _resolveComponent(\"Badge\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(_toDisplayString($data.localstatus) + \" \", 1 /* TEXT */), _createCommentVNode(\" initial record check \"), _createVNode(_component_Toast, {\n    position: \"center\"\n  }), _ctx.get_q_status == 'NR' ? (_openBlock(), _createBlock(_component_Panel, {\n    key: 0,\n    header: \"Message\"\n  }, {\n    default: _withCtx(() => [_hoisted_1, _hoisted_2, _createVNode(_component_Button, {\n      type: \"button\",\n      onClick: $options.register_user_qa,\n      label: \"Start\",\n      class: \"p-button-success\"\n    }, null, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Record settting \"), _ctx.get_q_status == 'RS' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Answers_KV, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"p-fluid p-formgrid p-grid\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString(item.question_name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [item.question_type == \"Options\" ? (_openBlock(), _createBlock(_component_Dropdown, {\n      key: 0,\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      options: $data.oprions,\n      optionLabel: \"name\",\n      placeholder: \"please indicate \"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"options\"])) : _createCommentVNode(\"v-if\", true), item.question_type == 'Slider' ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_6, \"Please Drage between [0,10] \" + _toDisplayString(item.answer), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.question_type == 'Slider' ? (_openBlock(), _createBlock(_component_Slider, {\n      key: 2,\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      step: 1,\n      min: 1,\n      max: 10,\n      class: \"p-p-2\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), item.question_type == 'YESNO' ? (_openBlock(), _createBlock(_component_SelectButton, {\n      key: 3,\n      class: \"p-button-primary\",\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      options: $data.yesno\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"options\"])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_Button, {\n    type: \"button\",\n    onClick: $options.submit,\n    label: \"Submit\",\n    class: \"p-button-success p-button-lg\"\n  }, null, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Editing question \"), _ctx.get_q_status == 'EDIT' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [$data.localedit == false ? (_openBlock(), _createBlock(_component_Panel, {\n    key: 0,\n    header: \"You Already have you answers\"\n  }, {\n    icons: _withCtx(() => [_createVNode(_component_Button, {\n      type: \"button\",\n      onClick: $options.edit_questions,\n      label: \"EDIT\",\n      class: \"p-button-success p-button-lg\"\n    }, null, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.get_qa[0][\"FWBMNU\"], (item, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"p-fluid p-formgrid p-grid\",\n        key: index\n      }, [_createVNode(_component_Divider, {\n        align: \"center\",\n        type: _ctx.dashed\n      }, null, 8 /* PROPS */, [\"type\"]), _createElementVNode(\"h3\", null, _toDisplayString(item.question_name.question), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, [_createTextVNode(\" Answer: \"), _createVNode(_component_Badge, {\n        value: item.answer,\n        severity: \"success\"\n      }, null, 8 /* PROPS */, [\"value\"])])])]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.localedit == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.Answers_KV, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"p-fluid p-formgrid p-grid\",\n      key: index\n    }, [_createVNode(_component_Divider, {\n      align: \"center\",\n      type: _ctx.dashed\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_10, _toDisplayString(index + 1), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"h3\", null, _toDisplayString(item.question_name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [item.question_type == \"Options\" ? (_openBlock(), _createBlock(_component_Dropdown, {\n      key: 0,\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      options: $data.oprions,\n      optionLabel: \"name\",\n      placeholder: \"please indicate \"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"options\"])) : _createCommentVNode(\"v-if\", true), item.question_type == 'Slider' ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_13, \"Please Drage between [0,10] \" + _toDisplayString(item.answer), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), item.question_type == 'Slider' ? (_openBlock(), _createBlock(_component_Slider, {\n      key: 2,\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      step: 1,\n      min: 1,\n      max: 10,\n      class: \"p-p-2\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), item.question_type == 'YESNO' ? (_openBlock(), _createBlock(_component_SelectButton, {\n      key: 3,\n      class: \"p-button-primary\",\n      modelValue: item.answer,\n      \"onUpdate:modelValue\": $event => item.answer = $event,\n      options: $data.yesno\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"options\"])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_Button, {\n    type: \"button\",\n    onClick: $options.save,\n    label: \"Save\",\n    class: \"p-button-success p-button-lg\"\n  }, null, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" {{ get_qa[0]['total_answers'] }} \")]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_createElementBlock","$data","_createVNode","_component_Toast","position","_ctx","_createBlock","_component_Panel","header","_hoisted_1","_hoisted_2","_component_Button","type","onClick","$options","label","_createCommentVNode","_Fragment","item","index","key","_hoisted_4","question_name","_hoisted_5","question_type","_component_Dropdown","answer","options","optionLabel","placeholder","_component_Slider","step","min","max","_component_SelectButton","icons","_component_Divider","align","question","_hoisted_8","_component_Badge","value","severity","_hoisted_10","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\components\\F_WBMNU.vue"],"sourcesContent":["<template>\r\n<div>\r\n    {{ localstatus }}\r\n\r\n    <!-- initial record check -->\r\n    <Toast position=\"center\" />\r\n    <Panel header=\"Message\" v-if=\"get_q_status=='NR'\">\r\n\t<h1> No Reocrds found for you</h1>\r\n     <div class=\"p-m-2\"> <h3>click below button to start questionnaire</h3></div>\r\n     <Button type=\"button\" v-on:click='register_user_qa' label=\"Start\" class=\"p-button-success\"/>\r\n   </Panel>\r\n   <!-- Record settting -->\r\n   <div v-if=\"get_q_status=='RS'\">\r\n        <div class=\"p-fluid p-formgrid p-grid\" v-for='(item,index) in Answers_KV' :key='index' >\r\n            \r\n            <div class=\"p-field p-col\" >\r\n                    <h3>{{ item.question_name }}</h3>\r\n                    <div class=\"demo-container p-pl-6 p-pr-6\">\r\n\r\n                    <Dropdown v-model=\"item.answer\" :options=\"oprions\" optionLabel=\"name\" placeholder=\"please indicate \" v-if='item.question_type==\"Options\"'/>\r\n                    <h3 v-if=\"item.question_type=='Slider'\">Please Drage between [0,10] {{ item.answer }}</h3>\r\n                    <Slider v-model=\"item.answer\" v-if=\"item.question_type=='Slider'\" :step=\"1\" :min=\"1\" :max=\"10\"   class=\"p-p-2\"/>\r\n                    \r\n                    <SelectButton class='p-button-primary' v-model=\"item.answer\" :options=\"yesno\" v-if=\"item.question_type=='YESNO'\" />\r\n                    </div>\r\n            </div>\r\n         </div>\r\n           <Button type=\"button\" v-on:click='submit' label=\"Submit\" class=\"p-button-success p-button-lg\"/>\r\n   </div>\r\n\r\n   <!-- Editing question -->\r\n   <div v-if=\"get_q_status=='EDIT'\">\r\n            <Panel  v-if=\"localedit==false\" header=\"You Already have you answers\">\r\n            <template #icons>\r\n                    <Button type=\"button\" v-on:click='edit_questions' label=\"EDIT\" class=\"p-button-success p-button-lg\"/>\r\n                \r\n            </template>\r\n            <div class=\"p-fluid p-formgrid p-grid\" v-for='(item,index) in get_qa[0][\"FWBMNU\"]' :key='index' >\r\n                         <Divider align=\"center\" :type='dashed'/>\r\n                          <h3>{{ item.question_name.question }}</h3>\r\n                          <div class=\"demo-container p-pl-6 p-pr-6\">\r\n                          <h3> Answer:  <Badge :value=\"item.answer\"  severity=\"success\"></Badge></h3>\r\n                          </div>\r\n\r\n                        \r\n\r\n                         \r\n            </div>\r\n            </Panel>\r\n            <div v-if=\"localedit==true\">\r\n                \r\n                <div class=\"p-fluid p-formgrid p-grid\" v-for='(item,index) in Answers_KV' :key='index' >\r\n                         <Divider align=\"center\" :type='dashed'>\r\n                            <span class=\"p-tag\">{{ index +1}} </span>\r\n                        </Divider>\r\n                    <div class=\"p-field p-col p-p-2\" >\r\n                       \r\n                            <h3>{{ item.question_name }}</h3>\r\n                            <div class=\"demo-container p-pl-6 p-pr-6\">\r\n\r\n                            <Dropdown v-model=\"item.answer\" :options=\"oprions\" optionLabel=\"name\" placeholder=\"please indicate \" v-if='item.question_type==\"Options\"'/>\r\n                            <h3 v-if=\"item.question_type=='Slider'\">Please Drage between [0,10] {{ item.answer }}</h3>\r\n                            <Slider v-model=\"item.answer\" v-if=\"item.question_type=='Slider'\" :step=\"1\" :min=\"1\" :max=\"10\"   class=\"p-p-2\"/>\r\n                            \r\n                            <SelectButton class='p-button-primary' v-model=\"item.answer\" :options=\"yesno\" v-if=\"item.question_type=='YESNO'\" />\r\n                            </div>\r\n                    </div>\r\n                      \r\n                </div>\r\n                <Button type=\"button\" v-on:click='save' label=\"Save\" class=\"p-button-success p-button-lg\"/>\r\n              \r\n                \r\n        </div>\r\n   </div>\r\n\r\n <!-- {{ get_qa[0]['total_answers'] }} -->\r\n</div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n import Json from \"@/assets/endpoints.json\"\r\n// import { computed } from 'vue'\r\nexport default {\r\n    data(){\r\n        return{\r\n            isq_link:Json[0]['FWBMNU'],\r\n            total:Json[0]['FWBMNU']['Total'],\r\n            questionlink:Json[0]['FWBMNU']['Questions'],\r\n            submission_link:Json[0]['FWBMNU']['Answers'],\r\n            edit:Json[0]['FWBMNU']['Edit'],\r\n            sublink:'FWBMNU',\r\n            status:this.$store.getters.get_q_status,\r\n            value: [0],\r\n            localstatus:'',\r\n            Answers_KV:[],\r\n            Submisions:[],\r\n            submitstatus:false,\r\n            yesno: ['YES', 'NO'],\r\n            yesnoanswer:null,\r\n            selected:null,\r\n            oprions: [\r\n\t\t\t{name: 'None of the time', value: 1},\r\n\t\t\t{name: 'Rarely', value: 2},\r\n\t\t\t{name: 'Some of the time', value: 3},\r\n\t\t\t{name: 'Often', value: 4},\r\n            {name: 'All of the Time', value: 5}\r\n            \r\n        ],\r\n        take_questions:false,\r\n        localedit:false\r\n        }\r\n        },\r\n        computed:{\r\n            ...mapGetters([\r\n                'get_questions',\r\n                'get_q_status',\r\n                'get_qa',\r\n                'getuser'\r\n            ]),\r\n           \r\n        },\r\n        methods:{\r\n            check(){\r\n                    let link=this.total\r\n                    this.$store.dispatch('check_q_status',link)\r\n\r\n                    },\r\n           register_user_qa(){\r\n                            console.log(\"you clicked\")\r\n                            if(this.get_q_status=='NR'){\r\n                                    this.$store.dispatch('registeruser',this.total)\r\n                                    this.$router.go()\r\n                                }\r\n                              },\r\n          create_object(){\r\n\r\n                     var i;\r\n                // console.log(this.get_questions.data) checking questions\r\n                    for(i=0;i<this.get_questions.length;i++){\r\n                    \r\n                        \r\n                        this.Answers_KV.push({\r\n                            \"qid\":this.get_questions[i]['id'],\r\n                            \"answer\": 0,\r\n                            // \"main_question_set\":this.getuser,\r\n                            \"question_name\": this.get_questions[i]['question'],\r\n                            \"question_type\":this.get_questions[i]['question_type'],\r\n                            // \"answer_by\": this.getuser\r\n                        })\r\n                      }\r\n                      console.log(this.Answers_KV)\r\n                      },\r\n        submit(){\r\n           var i;\r\n              var checking=0;\r\n              console.log(checking)\r\n                // console.log(this.get_questions.data) checking questions\r\n                    for(i=0;i<this.Answers_KV.length;i++){\r\n                    \r\n                        if(this.Answers_KV[i]['question_type']=='Options'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\r\n                                    this.Submisions.push({\r\n                                            'answer':this.Answers_KV[i]['answer']['value'],\r\n                                            'editid':this.Answers_KV[i]['editid'],\r\n                                            'qid':this.Answers_KV[i]['qid'],\r\n                                            'question_name':this.Answers_KV[i]['question_name'],\r\n                                            'question_type':this.Answers_KV[i]['question_type']\r\n                                        })\r\n                                        console.log(this.Answers_KV[i])\r\n                                             }\r\n                                        if(!this.Answers_KV[i]['answer'])\r\n                                        {\r\n                                                // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\r\n                                            checking=checking+1\r\n                                        }\r\n                                    }\r\n                                    catch(err){\r\n                                        console.log(err)\r\n                                    }\r\n                            \r\n                              }\r\n                            if(this.Answers_KV[i]['question_type']=='Slider'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\r\n                                                                this.Submisions.push(\r\n                                                                {\r\n                                                                    'answer':this.Answers_KV[i]['answer'],\r\n                                                                    'editid':this.Answers_KV[i]['editid'],\r\n                                                                    'qid':this.Answers_KV[i]['qid'],\r\n                                                                    'question_name':this.Answers_KV[i]['question_name'],\r\n                                                                    'question_type':this.Answers_KV[i]['question_type']\r\n                                                                })\r\n                                                                console.log(this.Answers_KV[i])\r\n                                                                }\r\n                                if(!this.Answers_KV[i]['Slider'])\r\n                                                                {\r\n                                        // this.$toast.add({severity:'error', summary: 'Empty fields', detail:'please fill your Answer for '+this.Answers_KV[i]['question_name'], life: 5000});\r\n                                                                checking=checking+1\r\n                                                                }\r\n                                                                }\r\n                            catch(err){\r\n                                console.log(err)\r\n                                      }\r\n                            \r\n                           }\r\n                        if(this.Answers_KV[i]['question_type']=='YESNO'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                                    if(this.Answers_KV[i]['answer']=='YES')\r\n                                    {\r\n                                                        this.Submisions.push(\r\n                                                        {\r\n                                                    'answer':1,\r\n                                                    'editid':this.Answers_KV[i]['editid'],\r\n                                                    'qid':this.Answers_KV[i]['qid'],\r\n                                                    'question_name':this.Answers_KV[i]['question_name'],\r\n                                                    'question_type':this.Answers_KV[i]['question_type']\r\n                                                    })\r\n\r\n                                    }\r\n                                    else{\r\n                                                                this.Submisions.push(\r\n                                                        {\r\n                                                            'answer':0,\r\n                                                            'editid':this.Answers_KV[i]['editid'],\r\n                                                            'qid':this.Answers_KV[i]['qid'],\r\n                                                            'question_name':this.Answers_KV[i]['question_name'],\r\n                                                            'question_type':this.Answers_KV[i]['question_type']\r\n                                                        })\r\n                                    }\r\n                                }\r\n                                if(!this.Answers_KV[i]['Slider'])\r\n                                {\r\n                                        \r\n                                    checking=checking+1\r\n                                }\r\n                            }\r\n                            catch(err){\r\n                                console.log(err)\r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                        \r\n                    }\r\n            // console.log(this.Submisions)\r\n                    if(this.get_q_status=='RS'){\r\n                            if(this.Submisions.length!=this.Answers_KV.length){\r\n                                var q=this.Answers_KV.length\r\n                                var b=this.Submisions.length\r\n                                var len=q-b\r\n                                    this.$toast.add({severity:'error', summary: 'Empty fields', detail:'there are  '+len+'empty fields', life: 5000});\r\n                                    this.Submisions=[]\r\n                                }\r\n                            else{\r\n                                console.log('no empty fields')\r\n                                console.log('I am calling store ')\r\n                                console.log(this.Submisions)\r\n                                let link=this.submission_link\r\n                                let submisiondata=this.Submisions\r\n                                console.log(\"iam checking length\")\r\n                                 console.log(this.Submisions.length)\r\n                                \r\n                                this.$store.dispatch('submitanswers',{link,submisiondata})\r\n                                .then(() =>  this.$toast.add({severity:'success', summary: 'Answers submitted', detail:'submitted your answers , absorb below', life: 3000},\r\n                                this.check(),\r\n                                this.localedit=true,\r\n                                ))\r\n                                \r\n                                .catch(err => console.log(err))\r\n                                \r\n                                // this.$router.go()\r\n                                this.Submisions=[]\r\n                                 }\r\n                    }\r\n\r\n            },\r\n            edit_questions(){\r\n                \r\n                var i\r\n                this.Answers_KV=[]\r\n                this.Submisions=[]\r\n                 for(i=0;i<this.get_qa[0][this.sublink].length;i++){\r\n                        if(this.get_qa[0][this.sublink][i]['question_name']['question_type']=='Options'){\r\n                                                                if(this.get_qa[0][this.sublink][i]['answer']=='1'){\r\n                                                                        this.get_qa[0][this.sublink][i]['answer']={name: 'None of the time', value: 1}\r\n\r\n                                                                }\r\n                                                                if(this.get_qa[0][this.sublink][i]['answer']=='2'){\r\n                                                                        this.get_qa[0][this.sublink][i]['answer']={name: 'Rarely', value: 2}\r\n\r\n                                                                }\r\n                                                                if(this.get_qa[0][this.sublink][i]['answer']=='3'){\r\n                                                                        this.get_qa[0][this.sublink][i]['answer']={name: 'Some of the time', value: 3}\r\n\r\n                                                                }\r\n                                                                if(this.get_qa[0][this.sublink][i]['answer']=='4'){\r\n                                                                        this.get_qa[0][this.sublink][i]['answer']={name: 'Often', value: 4}\r\n\r\n                                                                }\r\n                                                                if(this.get_qa[0][this.sublink][i]['answer']=='5'){\r\n                                                                        this.get_qa[0][this.sublink][i]['answer']={name: 'All of the time', value: 5}\r\n\r\n                                                                }\r\n                                                                     }\r\n                        if(this.get_qa[0][this.sublink][i]['question_name']['question_type']=='YESNO'){\r\n                                                                                            if(this.get_qa[0][this.sublink][i]['answer']=='1'){\r\n                                                                                                    this.get_qa[0][this.sublink][i]['answer']='YES'\r\n\r\n                                                                                            }\r\n                                                                                            if(this.get_qa[0][this.sublink][i]['answer']=='0'){\r\n                                                                                                    this.get_qa[0][this.sublink][i]['answer']='NO'\r\n\r\n                                                                                            }\r\n                                                                                            }\r\n                    \r\n                                                this.Answers_KV.push({\r\n                                                    \"editid\":this.get_qa[0][this.sublink][i]['id'],\r\n                                                    \"qid\":this.get_qa[0][this.sublink][i]['question_name']['id'],\r\n                                                    \"answer\": parseInt(this.get_qa[0][this.sublink][i]['answer'],10),\r\n                                                    // \"main_question_set\":this.getuser,\r\n                                                    \"question_name\": this.get_qa[0][this.sublink][i]['question_name']['question'],\r\n                                                    \"question_type\":this.get_qa[0][this.sublink][i]['question_name']['question_type'],\r\n                                                    // \"answer_by\": this.getuser\r\n                                                })\r\n                                                }\r\n                            console.log('after creating edit answers')\r\n                            console.log(this.Answers_KV)\r\n                            this.localedit=true\r\n\r\n                    },\r\n            save(){\r\n              var i;\r\n                this.Submisions=[]\r\n                console.log(\" i am here after save button\")\r\n                console.log(this.Answers_KV)\r\n                    for(i=0;i<this.Answers_KV.length;i++){\r\n                    \r\n                        if(this.Answers_KV[i]['question_type']=='Options'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\r\n                            this.Submisions.push(\r\n                                {\r\n                                    'answer':this.Answers_KV[i]['answer']['value'],\r\n                                    'editid':this.Answers_KV[i]['editid'],\r\n                                        'qid':this.Answers_KV[i]['qid'],\r\n                                    'question_name':this.Answers_KV[i]['question_name'],\r\n                                    'question_type':this.Answers_KV[i]['question_type']\r\n                                }\r\n                            )\r\n                            console.log(this.Answers_KV[i])\r\n                                }\r\n                            }\r\n                            catch(err){\r\n                                console.log(err)\r\n                                     }\r\n                            \r\n                            }\r\n                            if(this.Answers_KV[i]['question_type']=='Slider'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                            //    this.Answers_KV[i]['answer']=this.Answers_KV[i]['answer']['value']\r\n                                                                this.Submisions.push(\r\n                                                                {\r\n                                                                    'answer':this.Answers_KV[i]['answer'],\r\n                                                                    'editid':this.Answers_KV[i]['editid'],\r\n                                                                    'qid':this.Answers_KV[i]['qid'],\r\n                                                                    'question_name':this.Answers_KV[i]['question_name'],\r\n                                                                    'question_type':this.Answers_KV[i]['question_type']\r\n                                                                })\r\n                                                                console.log(this.Answers_KV[i])\r\n                                                                  }\r\n                               }\r\n                            catch(err){\r\n                                console.log(err)\r\n                                    }\r\n                            \r\n                        }\r\n                        if(this.Answers_KV[i]['question_type']=='YESNO'){\r\n                            try{\r\n                                if(this.Answers_KV[i]['answer']){\r\n                                    if(this.Answers_KV[i]['answer']=='YES')\r\n                                    {\r\n                                                        this.Submisions.push(\r\n                                                        {\r\n                                                    'answer':1,\r\n                                                    'editid':this.Answers_KV[i]['editid'],\r\n                                                    'qid':this.Answers_KV[i]['qid'],\r\n                                                    'question_name':this.Answers_KV[i]['question_name'],\r\n                                                    'question_type':this.Answers_KV[i]['question_type']\r\n                                                    })\r\n\r\n                                    }\r\n                                    else{\r\n                                                                this.Submisions.push(\r\n                                                        {\r\n                                                            'answer':0,\r\n                                                            'editid':this.Answers_KV[i]['editid'],\r\n                                                            'qid':this.Answers_KV[i]['qid'],\r\n                                                            'question_name':this.Answers_KV[i]['question_name'],\r\n                                                            'question_type':this.Answers_KV[i]['question_type']\r\n                                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch(err){\r\n                                console.log(err)\r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                        \r\n                    }\r\n            // console.log(this.Submisions)\r\n               \r\n                    if(this.get_q_status=='EDIT'){\r\n                        console.log(this.Submisions)\r\n                        console.log('no empty fields')\r\n                                console.log('I am calling store for save')\r\n                                console.log(this.Submisions)\r\n                                let link=this.edit\r\n                                let submisiondata=this.Submisions\r\n                        \r\n                                this.$store.dispatch('save',{link,submisiondata})\r\n                                .then(() =>  this.$toast.add({severity:'success', summary: 'Answers updated', detail:'updated your answers , absorb below', life: 3000}))\r\n                                .catch(err => console.log(err))\r\n                        this.Submisions=[]\r\n                        this.Answers_KV=[]\r\n                        this.localedit=false\r\n                        this.check()\r\n\r\n                    }\r\n\r\n            }\r\n\r\n        },\r\n        watch:{\r\n            get_q_status(){\r\n                if(this.get_q_status=='NR'){\r\n                    this.take_questions=true\r\n                }\r\n                if(this.get_q_status==\"RS\"){\r\n                    this.$store.dispatch('questions_taker',this.questionlink)\r\n                    this.create_object()\r\n                }\r\n                if(this.get_q_status=='RF'){\r\n                    console.log(' iam here')\r\n                    if(this.get_qa[0]['total_answers']=='0'){\r\n                        this.$store.dispatch('questions_taker',this.questionlink)\r\n                        this.localstatus='0 answers so far',\r\n                        this.get_q_status=='RS'\r\n                        \r\n                    }\r\n                }\r\n            },\r\n            localedit(){\r\n                this.check()\r\n            },\r\n            submitstatus(){\r\n                this.check()\r\n            }\r\n\r\n        },\r\n        created(){\r\n            this.$store.dispatch(\"set_heading\",'Final Well being Model NU questionnaire')\r\n            this.check()\r\n        }\r\n\r\n    \r\n}\r\n</script>\r\n<style lang='scss' scoped>\r\n::v-deep(.p-scrollpanel) {\r\n    p {\r\n        padding: .5rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n    & .button{\r\n         .p-selectbutton {\r\n             background:green;\r\n\r\n    }\r\n    }\r\n    &.custombar1 {\r\n        .p-scrollpanel-wrapper {\r\n            border-right: 9px solid var(--surface-b);\r\n        }\r\n\r\n        .p-scrollpanel-bar {\r\n            background-color: var(--primary-color);\r\n            opacity: 1;\r\n            transition: background-color .2s;\r\n\r\n            &:hover {\r\n                background-color: #007ad9;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.custombar2 {\r\n        .p-scrollpanel-wrapper {\r\n            border-right: 9px solid var(--surface-b);\r\n            border-bottom: 9px solid var(--surface-b);\r\n        }\r\n\r\n        .p-scrollpanel-bar {\r\n            background-color: var(--surface-d);\r\n            border-radius: 0;\r\n            opacity: 1;\r\n            transition: background-color .2s;\r\n        }\r\n    }  \r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}