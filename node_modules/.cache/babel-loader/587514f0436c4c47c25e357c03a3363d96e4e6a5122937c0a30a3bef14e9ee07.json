{"ast":null,"code":"import Json from \"@/assets/endpoints.json\";\nimport axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      server: Json[0]['SERVER']['SERVER'],\n      isq_inital: Json[0]['ISQ']['Total'],\n      isq_final: Json[0]['FISQ']['Total'],\n      isq_status: false,\n      mwb_status: false,\n      wbm_status: false,\n      isq1: [],\n      isq2: [],\n      isq_data: {\n        labels: [],\n        datasets: [{\n          label: 'My inital dataset',\n          backgroundColor: 'rgba(179,181,198,0.2)',\n          borderColor: 'rgba(179,181,198,1)',\n          pointBackgroundColor: 'rgba(179,181,198,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(179,181,198,1)',\n          data: []\n        }, {\n          label: 'My final dataset',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          pointBackgroundColor: 'rgba(255,99,132,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\n          data: []\n        }]\n      },\n      mwb1: [],\n      mwb2: [],\n      wbm1: [],\n      wbm2: []\n    };\n  },\n  computed: {\n    ...mapState(['token', 'user', 'heading'])\n  },\n  methods: {\n    get_isq() {\n      const headers = {\n        'Authorization': 'Token' + ' ' + this.token\n      };\n      axios.get(this.server + this.isq_inital, {\n        'headers': headers\n      }).then(resp => {\n        console.log(resp.data);\n        if (resp.data[0]['ISQ']['total_answers'] == resp.data[0]['ISQ']['total_questions']) {\n          this.isq1 = resp.data[0]['ISQ'];\n          let result = this.isq1.map(a => a.answer);\n          console.log(result);\n          this.isq_data['datasets'][0]['data'] = result;\n        }\n      });\n      axios.get(this.server + this.isq_final, {\n        'headers': headers\n      }).then(resp => {\n        console.log(resp.data);\n        if (resp.data[0]['FISQ']['total_answers'] == resp.data[0]['FISQ']['total_questions']) {\n          this.isq2 = resp.data[0]['FISQ'];\n          let result = this.isq2.map(a => a.answer);\n          console.log(result);\n          this.isq_data['datasets'][1]['data'] = result;\n          let lables = this.isq2.map(a => a.question_name.question);\n          this.isq_data['labels'] = lables;\n        }\n      });\n    }\n  },\n  created() {\n    this.get_isq();\n  }\n};","map":{"version":3,"mappings":"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","names":["Json","axios","mapState","data","server","isq_inital","isq_final","isq_status","mwb_status","wbm_status","isq1","isq2","isq_data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","mwb1","mwb2","wbm1","wbm2","computed","methods","get_isq","headers","token","get","then","resp","console","log","result","map","a","answer","lables","question_name","question","created"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\components\\DV.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h1>Data visualization</h1>\r\n    <h2> immune system questionnairre</h2>\r\n    <Chart type=\"radar\" :data=\"isq_data\" />\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport Json from \"@/assets/endpoints.json\"\r\nimport axios from 'axios'\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n    data(){\r\n        return{\r\n            server:Json[0]['SERVER']['SERVER'],\r\n            isq_inital:Json[0]['ISQ']['Total'],\r\n            isq_final:Json[0]['FISQ']['Total'],\r\n            isq_status:false,\r\n            mwb_status:false,\r\n            wbm_status:false,\r\n            isq1:[],\r\n            isq2:[],\r\n            isq_data:{\r\n                labels:[],\r\n                datasets:[\r\n                    {\r\n\t\t\t\t\t\tlabel: 'My inital dataset',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(179,181,198,0.2)',\r\n\t\t\t\t\t\tborderColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tpointBackgroundColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tpointBorderColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(179,181,198,1)',\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'My final dataset',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\r\n\t\t\t\t\t\tborderColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tpointBackgroundColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tpointBorderColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBackgroundColor: '#fff',\r\n\t\t\t\t\t\tpointHoverBorderColor: 'rgba(255,99,132,1)',\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t}\r\n                ]\r\n            },\r\n            mwb1:[],\r\n            mwb2:[],\r\n            wbm1:[],\r\n            wbm2:[],\r\n        }\r\n    },\r\n      computed:{\r\n    ...mapState([\r\n      'token',\r\n      'user',\r\n      'heading'\r\n    ])\r\n      },\r\n    methods:{\r\n        get_isq(){\r\n            const headers={\r\n                'Authorization': 'Token'+' '+this.token\r\n                    }\r\n            axios.get(this.server+this.isq_inital,{'headers':headers}\r\n            ).then(resp=>{\r\n                console.log(resp.data)\r\n                if(resp.data[0]['ISQ']['total_answers']==resp.data[0]['ISQ']['total_questions']){\r\n                    this.isq1=resp.data[0]['ISQ']\r\n                    let result = this.isq1.map(a => a.answer);\r\n                    console.log(result)\r\n                    this.isq_data['datasets'][0]['data']=result\r\n\r\n                }\r\n            })\r\n              axios.get(this.server+this.isq_final,{'headers':headers}\r\n            ).then(resp=>{\r\n                console.log(resp.data)\r\n                if(resp.data[0]['FISQ']['total_answers']==resp.data[0]['FISQ']['total_questions']){\r\n                    this.isq2=resp.data[0]['FISQ']\r\n                    let result = this.isq2.map(a => a.answer);\r\n                    console.log(result)\r\n                    this.isq_data['datasets'][1]['data']=result\r\n                    let lables=this.isq2.map(a=>a.question_name.question)\r\n                     this.isq_data['labels']=lables\r\n\r\n                }\r\n            })\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.get_isq()\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}