{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAW","names":["_createElementBlock"],"sourceRoot":"","sources":["D:\\vue_codes\\Docker-django-vue-boilerplate\\src\\views\\sample.vue"],"sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport Json from \"@/assets/endpoints.json\";\r\n\r\n// import { computed } from 'vue'\r\nexport default {\r\n  data() {\r\n    return {\r\n      isq_link: Json[0][\"DEMO\"],\r\n      total: Json[0][\"DEMO\"][\"Total\"],\r\n      questionlink: Json[0][\"DEMO\"][\"Questions\"],\r\n      submission_link: Json[0][\"DEMO\"][\"Answers\"],\r\n      edit: Json[0][\"DEMO\"][\"Edit\"],\r\n      sublink: \"Demo\",\r\n      status: this.$store.getters.get_q_status,\r\n      value: [0],\r\n      localstatus: \"\",\r\n      Answers_KV: [],\r\n      Submisions: [],\r\n      submitstatus: false,\r\n      yesno: [\"YES\", \"NO\"],\r\n      gender: [\"Male\", \"Female\"],\r\n      yesnoanswer: null,\r\n      selected: null,\r\n      oprions: [\r\n        { name: \"None of the time\", value: 1 },\r\n        { name: \"Rarely\", value: 2 },\r\n        { name: \"Some of the time\", value: 3 },\r\n        { name: \"Often\", value: 4 },\r\n        { name: \"All of the Time\", value: 5 },\r\n      ],\r\n      take_questions: false,\r\n      localedit: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"get_questions\", \"get_q_status\", \"get_qa\", \"getuser\"]),\r\n  },\r\n  methods: {\r\n    check() {\r\n      let link = this.total;\r\n      this.$store.dispatch(\"check_q_status\", link);\r\n    },\r\n    register_user_qa() {\r\n      console.log(\"you clicked\");\r\n      if (this.get_q_status == \"NR\") {\r\n        this.$store.dispatch(\"registeruser\", this.total);\r\n        this.$router.go();\r\n      }\r\n    },\r\n    create_object() {\r\n      var i;\r\n      // console.log(this.get_questions.data) checking questions\r\n      for (i = 0; i < this.get_questions.length; i++) {\r\n        this.Answers_KV.push({\r\n          qid: this.get_questions[i][\"id\"],\r\n          answer: \"\",\r\n          // \"main_question_set\":this.getuser,\r\n          question_name: this.get_questions[i][\"question\"],\r\n          question_type: this.get_questions[i][\"question_type\"],\r\n          question_field: this.get_questions[i][\"question_field\"],\r\n          // \"answer_by\": this.getuser\r\n        });\r\n      }\r\n      console.log(this.Answers_KV);\r\n    },\r\n    submit() {\r\n      var i;\r\n      var checking = 0;\r\n      console.log(checking);\r\n      // console.log(this.get_questions.data) checking questions\r\n      for (i = 0; i < this.Answers_KV.length; i++) {\r\n        this.Submisions.push({\r\n          answer: this.Answers_KV[i][\"answer\"],\r\n          editid: this.Answers_KV[i][\"editid\"],\r\n          qid: this.Answers_KV[i][\"qid\"],\r\n          question_name: this.Answers_KV[i][\"question_name\"],\r\n          question_type: this.Answers_KV[i][\"question_type\"],\r\n        });\r\n      }\r\n      // console.log(this.Submisions)\r\n      if (this.get_q_status == \"RS\") {\r\n        if (this.Submisions.length != this.Answers_KV.length) {\r\n          var q = this.Answers_KV.length;\r\n          var b = this.Submisions.length;\r\n          var len = q - b;\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Empty fields\",\r\n            detail: \"there are  \" + len + \"empty fields\",\r\n            life: 5000,\r\n          });\r\n          this.Submisions = [];\r\n        } else {\r\n          console.log(\"no empty fields\");\r\n          console.log(\"I am calling store \");\r\n          console.log(this.Submisions);\r\n          let link = this.submission_link;\r\n          let submisiondata = this.Submisions;\r\n          console.log(\"iam checking length\");\r\n          console.log(this.Submisions.length);\r\n\r\n          this.$store\r\n            .dispatch(\"submitanswers\", { link, submisiondata })\r\n            .then(() =>\r\n              this.$toast.add(\r\n                {\r\n                  severity: \"success\",\r\n                  summary: \"Answers submitted\",\r\n                  detail: \"submitted your answers , absorb below\",\r\n                  life: 3000,\r\n                },\r\n                this.check(),\r\n                (this.localedit = true)\r\n              )\r\n            )\r\n\r\n            .catch((err) => console.log(err));\r\n\r\n          // this.$router.go()\r\n          this.Submisions = [];\r\n        }\r\n      }\r\n    },\r\n    edit_questions() {\r\n      var i;\r\n      this.Answers_KV = [];\r\n      this.Submisions = [];\r\n      for (i = 0; i < this.get_qa[0][this.sublink].length; i++) {\r\n        this.Answers_KV.push({\r\n          editid: this.get_qa[0][this.sublink][i][\"id\"],\r\n          qid: this.get_qa[0][this.sublink][i][\"question_name\"][\"id\"],\r\n          answer: this.get_qa[0][this.sublink][i][\"answer\"],\r\n          // \"main_question_set\":this.getuser,\r\n          question_name:\r\n            this.get_qa[0][this.sublink][i][\"question_name\"][\"question\"],\r\n          question_type:\r\n            this.get_qa[0][this.sublink][i][\"question_name\"][\"question_type\"],\r\n          // \"answer_by\": this.getuser\r\n        });\r\n      }\r\n      console.log(\"after creating edit answers\");\r\n      console.log(this.Answers_KV);\r\n      this.localedit = true;\r\n    },\r\n    save() {\r\n      var i;\r\n      this.Submisions = [];\r\n      console.log(\" i am here after save button\");\r\n      console.log(this.Answers_KV);\r\n      for (i = 0; i < this.Answers_KV.length; i++) {\r\n        this.Submisions.push({\r\n          answer: this.Answers_KV[i][\"answer\"],\r\n          editid: this.Answers_KV[i][\"editid\"],\r\n          qid: this.Answers_KV[i][\"qid\"],\r\n          question_name: this.Answers_KV[i][\"question_name\"],\r\n          question_type: this.Answers_KV[i][\"question_type\"],\r\n        });\r\n      }\r\n      // console.log(this.Submisions)\r\n\r\n      if (this.get_q_status == \"EDIT\") {\r\n        console.log(this.Submisions);\r\n        console.log(\"no empty fields\");\r\n        console.log(\"I am calling store for save\");\r\n        console.log(this.Submisions);\r\n        let link = this.edit;\r\n        let submisiondata = this.Submisions;\r\n\r\n        this.$store\r\n          .dispatch(\"save\", { link, submisiondata })\r\n          .then(() =>\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Answers updated\",\r\n              detail: \"updated your answers , absorb below\",\r\n              life: 3000,\r\n            })\r\n          )\r\n          .catch((err) => console.log(err));\r\n        this.Submisions = [];\r\n        this.Answers_KV = [];\r\n        this.localedit = false;\r\n        this.check();\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    get_q_status() {\r\n      if (this.get_q_status == \"NR\") {\r\n        this.take_questions = true;\r\n      }\r\n      if (this.get_q_status == \"RS\") {\r\n        this.$store.dispatch(\"questions_taker\", this.questionlink);\r\n        this.create_object();\r\n      }\r\n      if (this.get_q_status == \"RF\") {\r\n        console.log(\" iam here\");\r\n        if (this.get_qa[0][\"total_answers\"] == \"0\") {\r\n          this.$store.dispatch(\"questions_taker\", this.questionlink);\r\n          (this.localstatus = \"0 answers so far\"), this.get_q_status == \"RS\";\r\n        }\r\n      }\r\n    },\r\n    localedit() {\r\n      this.check();\r\n    },\r\n    submitstatus() {\r\n      this.check();\r\n    },\r\n  },\r\n  created() {\r\n    this.$store.dispatch(\"set_heading\", \"Dashboard\");\r\n    this.check();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-scrollpanel) {\r\n  p {\r\n    padding: 0.5rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n  & .button {\r\n    .p-selectbutton {\r\n      background: green;\r\n    }\r\n  }\r\n  &.custombar1 {\r\n    .p-scrollpanel-wrapper {\r\n      border-right: 9px solid var(--surface-b);\r\n    }\r\n\r\n    .p-scrollpanel-bar {\r\n      background-color: var(--primary-color);\r\n      opacity: 1;\r\n      transition: background-color 0.2s;\r\n\r\n      &:hover {\r\n        background-color: #007ad9;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.custombar2 {\r\n    .p-scrollpanel-wrapper {\r\n      border-right: 9px solid var(--surface-b);\r\n      border-bottom: 9px solid var(--surface-b);\r\n    }\r\n\r\n    .p-scrollpanel-bar {\r\n      background-color: var(--surface-d);\r\n      border-radius: 0;\r\n      opacity: 1;\r\n      transition: background-color 0.2s;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}