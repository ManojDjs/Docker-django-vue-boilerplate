{"remainingRequest":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/password/Password.vue?vue&type=template&id=129b70e7&bindings={\"modelValue\":\"props\",\"promptLabel\":\"props\",\"mediumRegex\":\"props\",\"strongRegex\":\"props\",\"weakLabel\":\"props\",\"mediumLabel\":\"props\",\"strongLabel\":\"props\",\"feedback\":\"props\",\"overlayVisible\":\"data\",\"meterPosition\":\"data\",\"infoText\":\"data\",\"onOverlayEnter\":\"options\",\"onOverlayLeave\":\"options\",\"testStrength\":\"options\",\"onInput\":\"options\",\"onFocus\":\"options\",\"onBlur\":\"options\",\"onKeyUp\":\"options\",\"bindScrollListener\":\"options\",\"unbindScrollListener\":\"options\",\"bindResizeListener\":\"options\",\"unbindResizeListener\":\"options\",\"overlayRef\":\"options\",\"filled\":\"options\",\"weakText\":\"options\",\"mediumText\":\"options\",\"strongText\":\"options\",\"promptText\":\"options\"}","dependencies":[{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/password/Password.vue","mtime":499162500000},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1604800558176},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1604800559128},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js","mtime":1604800559128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbWVyZ2VQcm9wcyBhcyBfbWVyZ2VQcm9wcywgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIFRyYW5zaXRpb24gYXMgX1RyYW5zaXRpb24sIHdpdGhDdHggYXMgX3dpdGhDdHgsIEZyYWdtZW50IGFzIF9GcmFnbWVudCB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAicC1wYXNzd29yZC1pbmZvIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoImlucHV0IiwgX21lcmdlUHJvcHMoewogICAgcmVmOiAiaW5wdXQiLAogICAgdHlwZTogInBhc3N3b3JkIiwKICAgIGNsYXNzOiBbJ3AtaW5wdXR0ZXh0IHAtY29tcG9uZW50JywgewogICAgICAncC1maWxsZWQnOiAkb3B0aW9ucy5maWxsZWQKICAgIH1dLAogICAgdmFsdWU6ICRwcm9wcy5tb2RlbFZhbHVlLAogICAgb25JbnB1dDogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbklucHV0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbkZvY3VzOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm9uRm9jdXMuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIG9uQmx1cjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbkJsdXIuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIG9uS2V5dXA6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25LZXlVcC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgX2N0eC4kYXR0cnMpLCBudWxsLCAxNgogIC8qIEZVTExfUFJPUFMgKi8KICAsIFsidmFsdWUiXSksIF9jcmVhdGVWTm9kZShfVHJhbnNpdGlvbiwgewogICAgbmFtZTogInAtY29ubmVjdGVkLW92ZXJsYXkiLAogICAgb25FbnRlcjogJG9wdGlvbnMub25PdmVybGF5RW50ZXIsCiAgICBvbkxlYXZlOiAkb3B0aW9ucy5vbk92ZXJsYXlMZWF2ZQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFskZGF0YS5vdmVybGF5VmlzaWJsZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgICAgIGtleTogMCwKICAgICAgICByZWY6ICRvcHRpb25zLm92ZXJsYXlSZWYsCiAgICAgICAgY2xhc3M6ICJwLXBhc3N3b3JkLXBhbmVsIHAtY29tcG9uZW50IgogICAgICB9LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICAgICAgY2xhc3M6ICJwLXBhc3N3b3JkLW1ldGVyIiwKICAgICAgICBzdHlsZTogewogICAgICAgICAgJ2JhY2tncm91bmQtcG9zaXRpb24nOiAkZGF0YS5tZXRlclBvc2l0aW9uCiAgICAgICAgfQogICAgICB9LCBudWxsLCA0CiAgICAgIC8qIFNUWUxFICovCiAgICAgICksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgX3RvRGlzcGxheVN0cmluZygkZGF0YS5pbmZvVGV4dCksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApXSwgNTEyCiAgICAgIC8qIE5FRURfUEFUQ0ggKi8KICAgICAgKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldOwogICAgfSksCiAgICBfOiAxCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbIm9uRW50ZXIiLCAib25MZWF2ZSJdKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/password/Password.vue"],"names":[],"mappings":";;AAMiB,EAAA,KAAK,EAAC;;;sDALnB,YAAA,CACwF,OADxF,EAAA,WAAA,CACwF;AADjF,IAAA,GAAG,EAAC,OAC6E;AADrE,IAAA,IAAI,EAAC,UACgE;AADpD,IAAA,KAAK,EAAA,CAAA,yBAAA,EAAA;AAAA,kBAA2C,QAAA,CAAA;AAA3C,KAAA,CAC+C;AADO,IAAA,KAAK,EAAE,MAAA,CAAA,UACd;AAAnF,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA8E;AAAlE,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA6D;AAAjD,IAAA,MAAI,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,MAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA6C;AAAlC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA6B,GADxF,EAC8E,IAAA,CAAA,MAD9E,CAAA,EACoF,IADpF,EACoF;AAAA;AADpF,IACoF,CAAA,OAAA,CADpF,C,EAEA,YAAA,CAOa,WAPb,EAOa;AAPD,IAAA,IAAI,EAAC,qBAOJ;AAP2B,IAAA,OAAK,EAAE,QAAA,CAAA,cAOlC;AAPmD,IAAA,OAAK,EAAE,QAAA,CAAA;AAO1D,GAPb,E;sBACI;AAAA,aAKM,CAL4D,KAAA,CAAA,c,kBAAlE,YAAA,CAKM,KALN,EAKM;cAAA;AALA,QAAA,GAAG,EAAE,QAAA,CAAA,UAKL;AALiB,QAAA,KAAK,EAAC;AAKvB,OALN,E,CACI,YAAA,CAAoF,KAApF,EAAoF;AAA/E,QAAA,KAAK,EAAC,kBAAyE;AAArD,QAAA,KAAK,EAAA;AAAA,iCAA0B,KAAA,CAAA;AAA1B;AAAgD,OAApF,E,IAAA,E;;AAAA,O,EACA,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,gBAAA,CADA,KAAA,CAAA,QACA,CAFN,EACc;AAAA;AADd,O,CAFJ,E;;AAAA,O,qCAKM,CALN;AAAA,K;;GADJ,E;;AAAA,I,sBAAA,C","sourcesContent":["<template>\n    <input ref=\"input\" type=\"password\" :class=\"['p-inputtext p-component', {'p-filled': filled}]\" :value=\"modelValue\"\n        @input=\"onInput\" @focus=\"onFocus\" @blur=\"onBlur\" @keyup=\"onKeyUp\" v-bind=\"$attrs\" />\n    <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\">\n        <div :ref=\"overlayRef\" class=\"p-password-panel p-component\" v-if=\"overlayVisible\">\n            <div class=\"p-password-meter\" :style=\"{'background-position': meterPosition}\"></div>\n            <div class=\"p-password-info\">\n                {{infoText}}\n            </div>\n        </div>\n    </transition>\n</template>\n\n<script>\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport DomHandler from '../utils/DomHandler';\n\nexport default {\n    emits: ['update:modelValue'],\n    inheritAttrs: false,\n    props: {\n        modelValue: String,\n        promptLabel: {\n            type: String,\n            default: null\n        },\n        mediumRegex: {\n            type: String,\n            default: '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})' // eslint-disable-line\n        },\n        strongRegex: {\n            type: String,\n            default: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})' // eslint-disable-line\n        },\n        weakLabel: {\n            type: String,\n            default: null\n        },\n        mediumLabel: {\n            type: String,\n            default: null\n        },\n        strongLabel: {\n            type: String,\n            default: null\n        },\n        feedback: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            overlayVisible: false,\n            meterPosition: '',\n            infoText: this.promptLabel\n        };\n    },\n    mediumCheckRegExp: null,\n    strongCheckRegExp: null,\n    resizeListener: null,\n    scrollHandler: null,\n    overlay: null,\n    mounted() {\n        this.mediumCheckRegExp = new RegExp(this.mediumRegex);\n        this.strongCheckRegExp = new RegExp(this.strongRegex);\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    },\n    methods: {\n        onOverlayEnter() {\n            this.overlay.style.zIndex = String(DomHandler.generateZIndex());\n            this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$refs.input) + 'px';\n            DomHandler.absolutePosition(this.overlay, this.$refs.input);\n            this.bindScrollListener();\n            this.bindResizeListener();\n        },\n        onOverlayLeave() {\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.overlay = null;\n        },\n        testStrength(str) {\n            let level = 0;\n\n            if (this.strongCheckRegExp.test(str))\n                level = 3;\n            else if (this.mediumCheckRegExp.test(str))\n                level = 2;\n            else if (str.length)\n                level = 1;\n\n            return level;\n        },\n        onInput(event)  {\n             this.$emit('update:modelValue', event.target.value)\n        },\n        onFocus() {\n            if (this.feedback) {\n                this.overlayVisible = true;\n            }\n        },\n        onBlur() {\n            if (this.feedback) {\n                this.overlayVisible = false;\n            }\n        },\n        onKeyUp(event) {\n            if (this.feedback) {\n                let value = event.target.value;\n                let label = null;\n                let meterPos = null;\n\n                switch (this.testStrength(value)) {\n                    case 1:\n                        label = this.weakText;\n                        meterPos = '0px -10px';\n                        break;\n\n                    case 2:\n                        label = this.mediumText;\n                        meterPos = '0px -20px';\n                        break;\n\n                    case 3:\n                        label = this.strongText;\n                        meterPos = '0px -30px';\n                        break;\n\n                    default:\n                        label = this.promptText;\n                        meterPos = '0px 0px';\n                        break;\n                }\n\n                this.meterPosition = meterPos;\n                this.infoText = label;\n\n                if (!this.overlayVisible) {\n                    this.overlayVisible = true;\n                }\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.input, () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        }\n    },\n    computed: {\n        filled() {\n            return (this.modelValue != null && this.modelValue.toString().length > 0)\n        },\n        weakText() {\n            return this.weakLabel || this.$primevue.config.locale.weak;\n        },\n        mediumText() {\n            return this.mediumLabel || this.$primevue.config.locale.medium;\n        },\n        strongText() {\n            return this.strongLabel || this.$primevue.config.locale.strong;\n        },\n        promptText() {\n            return this.promptLabel || this.$primevue.config.locale.passwordPrompt;\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}