{"remainingRequest":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/views/Signup.vue?vue&type=style&index=0&id=024d905c&scoped=true&lang=css","dependencies":[{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/views/Signup.vue","mtime":1608136383559},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/css-loader/dist/cjs.js","mtime":1604800558316},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1604800559128},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/postcss-loader/src/index.js","mtime":1604800558736},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js","mtime":1604800559128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNuewogIHdpZHRoOjIwJTsKICBoZWlnaHQ6IDUwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgcGFkZGluZzoxMHB4Owp9CiN1c2VybmFtZXsKICBoZWlnaHQ6IDAuNGluOwp9Ci8qICNzaWdudXB7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDExMCwgMTUwLCAyMzYpOwp9ICovCi5wLWdyaWR7CiAgcGFkZGluZy10b3A6IDAuNWluOwp9Cg=="},{"version":3,"sources":["/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/views/Signup.vue"],"names":[],"mappings":";AA+NA,CAAC,CAAC;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtC,EAAE,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/src/views/Signup.vue","sourceRoot":"","sourcesContent":["<template>\n\n    <div>\n      <Toast position=\"top-right\" />\n      <!-- <Password v-model=\"val\" /> -->\n      \n        <Button type=\"button\" label=\"Registration\" icon=\"pi pi-users\" class=\"p-button-warning p-button-lg p-d-block p-mx-auto\" badgeClass=\"p-badge-danger\" /> \n        \n        <div class=\"p-grid\">\n            \n            <div class=\"box p-mx-auto p-p-auto\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                  <label for=\"Username\">First Name</label>\n                  <div class=\"p-inputgroup\">\n                  \n                        <Button icon=\"pi pi-user\" v-bind:class=\"fnvalid\"/>\n                  \n           \n                  <InputText id=\"username\" v-model=\"firstname\" type=\"text\" />\n                </div>\n              </div>\n                <div class=\"p-field\">\n                  <label for=\"Username\">Last Name</label>\n                  <div class=\"p-inputgroup\">\n                  \n                        <Button icon=\"pi pi-user\" v-bind:class=\"lnvalid\"/>\n                  \n           \n                  <InputText id=\"username\" v-model=\"lastname\" type=\"text\" />\n                </div>\n                </div>\n                <div class=\"p-field\">\n                  <label for=\"Username\">UserName</label>\n                  <div class=\"p-inputgroup\">\n                  \n                        <Button icon=\"pi pi-id-card\" v-bind:class=\"usernamevalid\"/>\n                  \n           \n                  <InputText id=\"username\" v-model=\"username\" type=\"text\" />\n                </div>\n                </div>\n                 <div class=\"p-field\">\n                   <label for=\"Email address\">Email Address</label>\n                  <div class=\"p-inputgroup\">\n                 \n                      <!-- <i class=\"pi pi-envelope\"></i> -->\n                      <Button icon=\"pi pi-envelope\" v-bind:class='emailvald'/>\n                 \n           \n                  <InputText id=\"email\" v-model=\"email\"  type=\"text\" />\n                </div>\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"Password\">Password</label>\n                  <div class=\"p-inputgroup\">\n                   <Button icon=\"pi pi-key\" v-bind:class=\"passwordvalid1\"/>\n                   <Password v-model=\"password1\" promptLabel mediumLabel />\n                </div>\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"Password\">Confirm Password</label>\n                  <div class=\"p-inputgroup\">\n                   <Button icon=\"pi pi-key\" v-bind:class=\"passwordvalid2\"/>\n                   <Password v-model=\"password2\" />\n                </div>\n                </div>\n            <Button type=\"submit\" v-on:click=\"register\"  style=\"width:10rem\" label=\"Register\" icon=\"pi pi-user-plus\" iconPos=\"right\" class=\"p-button-md\" />\n              \n           </div>\n           </div>\n           \n          \n         \n        </div>\n   \n</div>\n</template>\n<script>\nimport axios from 'axios';\n import Json from \"@/assets/endpoints.json\"\nexport default {\ndata(){\n  return{\n        server:Json[0]['SERVER']['SERVER'],\n        val: '',\n        firstname:'',\n        fnvalid:'p-button-warning',\n        lastname:'',\n        lnvalid:'p-button-warning',\n        \n        username:'',\n        usernamevalid:'p-button-warning',\n        email:'',\n        emailvald:'p-button-warning',\n        password1: '',\n        passwordvalid1:'p-button-warning',\n        password2: '',\n        passwordvalid2:'p-button-warning',\n        \n\n        errors: [],\n  // reg: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/\n   }\n   },\nmethods:{\n  register(){\n    if(this.username!=null&this.firstname!=null&this.lastname!=null&this.password1!=null&this.email!=null){\n      if(this.password1==this.password2){\n              const config={\n                headers:{\n                  'content-type':'application/json'\n                }\n              }\n              axios.post(this.server+'api/accounts/register/',{\n                username:this.username,\n                email:this.email,\n                password:this.password1,\n                first_name:this.firstname,\n                last_name:this.lastname},          \n                config)\n              .then(response=>{\n              // console.log(response.status),\n              console.log(response.data),\n              console.log(response.data.token)\n              // this.$store.getters.createToken(response.data.token)\n              this.$router.push('/RegistrationMessage')})\n              .catch(e=>{\n                // console.log(e.response.status)\n                console.log(e.response.data['username'])\n                if(e.response.status==400){\n                    this.$toast.add({severity:'error', summary: e.response.data, detail:'Try again with different username', life: 3000});\n                      }\n                \n                    })\n                }\n            else{\n                  this.$toast.add({severity:'error', summary: 'Invalid Email or password didn\"t matched', detail:'provice valid email', life: 3000});\n\n                  }\n             }\n       else{\n          this.$toast.add({severity:'error', summary: 'Empty fields', detail:'All fields must be filled', life: 3000});\n\n          }\n    \n        },\n      validateemail(){\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if(re.test(this.email)){\n              return true\n            }\n            else{\n              return false\n            }\n          }\n  \n  \n    \n     },\nwatch : {\n    email(email) {\n              var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if(re.test(email)){\n              console.log('matched')\n              this.emailvald='p-button-success'\n            }\n            else{\n              this.emailvald='p-button-danger'\n            }\n            },\n    password2(){\n            if(this.password1==this.password2){\n              this.passwordvalid2='p-button-success'\n            }\n            else{\n            this.passwordvalid2='p-button-danger'\n            }\n            },\n    password1(){\n            if(this.password1!=null){\n              this.passwordvalid1='p-button-success'\n            }\n            else{\n            this.passwordvalid1='p-button-danger'\n          }\n          },\n    username(){\n\n          if(this.username!=null){\n            this.usernamevalid='p-button-success'\n          }\n          else{\n          this.usernamevalid='p-button-danger'\n          }\n        },\n    firstname(){\n          if(this.firstname!=null){\n            this.fnvalid='p-button-success'\n          }\n          else{\n          this.fnvalid='p-button-danger'\n        }\n        },\n    lastname(){\n            if(this.lastname!=null){\n              this.lnvalid='p-button-success'\n            }\n            else{\n            this.lnvalid='p-button-danger'\n          }\n          },\n\n\n   }, \n    created(){\n      this.$store.dispatch(\"set_heading\",'Signup page')\n    }\n        \n\n}\n</script>\n<style scoped>\n#n{\n  width:20%;\n  height: 50px;\n  background-color: black;\n  padding:10px;\n}\n#username{\n  height: 0.4in;\n}\n/* #signup{\n  border: 1px solid rgb(110, 150, 236);\n} */\n.p-grid{\n  padding-top: 0.5in;\n}\n</style>"]}]}