{"remainingRequest":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/chart/Chart.vue?vue&type=template&id=c723a6f6&bindings={\"type\":\"props\",\"data\":\"props\",\"options\":\"props\",\"width\":\"props\",\"height\":\"props\",\"initChart\":\"options\",\"getCanvas\":\"options\",\"getBase64Image\":\"options\",\"refresh\":\"options\",\"reinit\":\"options\",\"onCanvasClick\":\"options\",\"generateLegend\":\"options\"}","dependencies":[{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/chart/Chart.vue","mtime":499162500000},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1604800558176},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1604800559128},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js","mtime":1604800559128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJwLWNoYXJ0Ij4KICAgICAgICA8Y2FudmFzIHJlZj0iY2FudmFzIiA6d2lkdGg9IndpZHRoIiA6aGVpZ2h0PSJoZWlnaHQiIEBjbGljaz0ib25DYW52YXNDbGljaygkZXZlbnQpIj48L2NhbnZhcz4KICAgIDwvZGl2Pgo="},{"version":3,"sources":["/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/chart/Chart.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/chart/Chart.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"p-chart\">\n        <canvas ref=\"canvas\" :width=\"width\" :height=\"height\" @click=\"onCanvasClick($event)\"></canvas>\n    </div>\n</template>\n\n<script>\nimport * as Chart from 'chart.js';\n\nexport default {\n    emits: ['select'],\n    props: {\n        type: String,\n        data: null,\n        options: null,\n        width: {\n            type: Number,\n            default: 300\n        },\n        height: {\n            type: Number,\n            default: 150\n        },\n    },\n    chart: null,\n    mounted() {\n        this.initChart();\n    },\n    beforeUnmount() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    },\n    watch: {\n        data() {\n            this.reinit();\n        },\n        type() {\n            this.reinit();\n        },\n        options() {\n            this.reinit();\n        }\n    },\n    methods: {\n        initChart() {\n            this.chart = new Chart(this.$refs.canvas, {\n                type: this.type,\n                data: this.data,\n                options: this.options\n            });\n        },\n        getCanvas() {\n            return this.$canvas;\n        },\n        getBase64Image() {\n            return this.chart.toBase64Image();\n        },\n        refresh() {\n            if (this.chart) {\n                this.chart.update();\n            }\n        },\n        reinit() {\n            if (this.chart) {\n                this.chart.destroy();\n                this.initChart();\n            }\n        },\n        onCanvasClick(event) {\n            if (this.chart) {\n                const element = this.chart.getElementAtEvent(event);\n                const dataset = this.chart.getDatasetAtEvent(event);\n\n                if (element && element[0] && dataset) {\n                    this.$emit('select', {originalEvent: event, element: element[0], dataset: dataset});\n                }\n            }\n        },\n        generateLegend() {\n            if (this.chart) {\n                return this.chart.generateLegend();\n            }\n        }\n    }\n}\n</script>\n\n<style>\n.p-chart {\n    position: relative;\n}\n</style>"]}]}