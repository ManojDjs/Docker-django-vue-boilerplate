{"remainingRequest":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/blockui/BlockUI.vue?vue&type=template&id=46e38acb&bindings={\"blocked\":\"props\",\"fullScreen\":\"props\",\"baseZIndex\":\"props\",\"autoZIndex\":\"props\",\"block\":\"options\",\"unblock\":\"options\",\"removeMask\":\"options\"}","dependencies":[{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/blockui/BlockUI.vue","mtime":499162500000},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":1604800558176},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1604800559128},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":1604800558196},{"path":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/vue-loader-v16/dist/index.js","mtime":1604800559128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IHJlZj0iY29udGFpbmVyIiBjbGFzcz0icC1ibG9ja3VpLWNvbnRhaW5lciI+CiAgICAgICAgPHNsb3Q+PC9zbG90PgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/blockui/BlockUI.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/ubuntu/PycharmProjects/Docker-django-vue-boilerplate/node_modules/primevue/components/blockui/BlockUI.vue","sourceRoot":"","sourcesContent":["<template>\n    <div ref=\"container\" class=\"p-blockui-container\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nimport DomHandler from '../utils/DomHandler';\n\nexport default {\n    emits: ['block', 'unblock'],\n    props: {\n        blocked: {\n            type: Boolean,\n            default: false\n        },\n        fullScreen: {\n            type: Boolean,\n            default: false\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        }\n    },\n    mask: null,\n    mounted() {\n        if (this.blocked) {\n            this.block();\n        }\n    },\n    watch: {\n        blocked(newValue) {\n            if (newValue === true)\n                this.block();\n            else\n                this.unblock();\n        }\n    },\n    methods: {\n        block() {\n            if (this.fullScreen) {\n                this.mask = document.createElement('div');\n                this.mask.setAttribute('class', 'p-blockui p-blockui-document');\n                document.body.appendChild(this.mask);\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n                document.activeElement.blur();\n            }\n            else {\n                this.mask = document.createElement('div');\n                this.mask.setAttribute('class', 'p-blockui');\n                this.$refs.container.appendChild(this.mask);\n            }\n\n            if (this.mask) {\n                setTimeout(() => {\n                    DomHandler.addClass(this.mask, 'p-component-overlay');\n                }, 1);\n            }\n\n            if (this.autoZIndex) {\n                this.mask.style.zIndex = String(this.baseZIndex + DomHandler.generateZIndex());\n            }\n\n            this.$emit('block');\n        },\n        unblock() {\n            DomHandler.addClass(this.mask, 'p-blockui-leave');\n            this.mask.addEventListener('transitionend', () => {\n                this.removeMask();\n            });\n        },\n        removeMask() {\n             if (this.fullScreen) {\n                document.body.removeChild(this.mask);\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            }\n            else {\n                this.$refs.container.removeChild(this.mask);\n            }\n\n            this.$emit('unblock');\n        }\n    }\n}\n</script>\n\n<style>\n.p-blockui-container {\n    position: relative;\n}\n\n.p-blockui {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition-property: background-color;\n}\n\n.p-blockui.p-component-overlay {\n    position: absolute;\n}\n\n.p-blockui-document.p-component-overlay {\n    position: fixed;\n}\n\n.p-blockui.p-blockui-leave.p-component-overlay {\n    background-color: transparent;\n}\n</style>\n"]}]}